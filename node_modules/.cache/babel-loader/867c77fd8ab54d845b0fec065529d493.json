{"ast":null,"code":"\"use strict\"; /// <reference lib=\"es2016\"/>\n/// <reference lib=\"es2017.sharedmemory\"/>\n/// <reference lib=\"esnext.asynciterable\"/>\n/// <reference lib=\"dom\"/>\n\nvar _toConsumableArray = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // TODO: Use the `URL` global when targeting Node.js 10\n// tslint:disable-next-line\n\nvar URLGlobal = typeof URL === 'undefined' ? require('url').URL : URL;\nvar toString = Object.prototype.toString;\n\nvar isOfType = function isOfType(type) {\n  return function (value) {\n    return typeof value === type;\n  };\n};\n\nvar isBuffer = function isBuffer(input) {\n  return !is.nullOrUndefined(input) && !is.nullOrUndefined(input.constructor) && is.function_(input.constructor.isBuffer) && input.constructor.isBuffer(input);\n};\n\nvar getObjectType = function getObjectType(value) {\n  var objectName = toString.call(value).slice(8, -1);\n\n  if (objectName) {\n    return objectName;\n  }\n\n  return null;\n};\n\nvar isObjectOfType = function isObjectOfType(type) {\n  return function (value) {\n    return getObjectType(value) === type;\n  };\n};\n\nfunction is(value) {\n  switch (value) {\n    case null:\n      return \"null\"\n      /* null */\n      ;\n\n    case true:\n    case false:\n      return \"boolean\"\n      /* boolean */\n      ;\n\n    default:\n  }\n\n  switch (typeof value) {\n    case 'undefined':\n      return \"undefined\"\n      /* undefined */\n      ;\n\n    case 'string':\n      return \"string\"\n      /* string */\n      ;\n\n    case 'number':\n      return \"number\"\n      /* number */\n      ;\n\n    case 'symbol':\n      return \"symbol\"\n      /* symbol */\n      ;\n\n    default:\n  }\n\n  if (is.function_(value)) {\n    return \"Function\"\n    /* Function */\n    ;\n  }\n\n  if (is.observable(value)) {\n    return \"Observable\"\n    /* Observable */\n    ;\n  }\n\n  if (Array.isArray(value)) {\n    return \"Array\"\n    /* Array */\n    ;\n  }\n\n  if (isBuffer(value)) {\n    return \"Buffer\"\n    /* Buffer */\n    ;\n  }\n\n  var tagType = getObjectType(value);\n\n  if (tagType) {\n    return tagType;\n  }\n\n  if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n    throw new TypeError('Please don\\'t use object wrappers for primitive types');\n  }\n\n  return \"Object\"\n  /* Object */\n  ;\n}\n\n(function (is) {\n  // tslint:disable-next-line:strict-type-predicates\n  var isObject = function isObject(value) {\n    return typeof value === 'object';\n  }; // tslint:disable:variable-name\n\n\n  is.undefined = isOfType('undefined');\n  is.string = isOfType('string');\n  is.number = isOfType('number');\n  is.function_ = isOfType('function'); // tslint:disable-next-line:strict-type-predicates\n\n  is.null_ = function (value) {\n    return value === null;\n  };\n\n  is.class_ = function (value) {\n    return is.function_(value) && value.toString().startsWith('class ');\n  };\n\n  is.boolean = function (value) {\n    return value === true || value === false;\n  };\n\n  is.symbol = isOfType('symbol'); // tslint:enable:variable-name\n\n  is.numericString = function (value) {\n    return is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n  };\n\n  is.array = Array.isArray;\n  is.buffer = isBuffer;\n\n  is.nullOrUndefined = function (value) {\n    return is.null_(value) || is.undefined(value);\n  };\n\n  is.object = function (value) {\n    return !is.nullOrUndefined(value) && (is.function_(value) || isObject(value));\n  };\n\n  is.iterable = function (value) {\n    return !is.nullOrUndefined(value) && is.function_(value[Symbol.iterator]);\n  };\n\n  is.asyncIterable = function (value) {\n    return !is.nullOrUndefined(value) && is.function_(value[Symbol.asyncIterator]);\n  };\n\n  is.generator = function (value) {\n    return is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\n  };\n\n  is.nativePromise = function (value) {\n    return isObjectOfType(\"Promise\"\n    /* Promise */\n    )(value);\n  };\n\n  var hasPromiseAPI = function hasPromiseAPI(value) {\n    return !is.null_(value) && isObject(value) && is.function_(value.then) && is.function_(value.catch);\n  };\n\n  is.promise = function (value) {\n    return is.nativePromise(value) || hasPromiseAPI(value);\n  };\n\n  is.generatorFunction = isObjectOfType(\"GeneratorFunction\"\n  /* GeneratorFunction */\n  );\n  is.asyncFunction = isObjectOfType(\"AsyncFunction\"\n  /* AsyncFunction */\n  );\n\n  is.boundFunction = function (value) {\n    return is.function_(value) && !value.hasOwnProperty('prototype');\n  };\n\n  is.regExp = isObjectOfType(\"RegExp\"\n  /* RegExp */\n  );\n  is.date = isObjectOfType(\"Date\"\n  /* Date */\n  );\n  is.error = isObjectOfType(\"Error\"\n  /* Error */\n  );\n\n  is.map = function (value) {\n    return isObjectOfType(\"Map\"\n    /* Map */\n    )(value);\n  };\n\n  is.set = function (value) {\n    return isObjectOfType(\"Set\"\n    /* Set */\n    )(value);\n  };\n\n  is.weakMap = function (value) {\n    return isObjectOfType(\"WeakMap\"\n    /* WeakMap */\n    )(value);\n  };\n\n  is.weakSet = function (value) {\n    return isObjectOfType(\"WeakSet\"\n    /* WeakSet */\n    )(value);\n  };\n\n  is.int8Array = isObjectOfType(\"Int8Array\"\n  /* Int8Array */\n  );\n  is.uint8Array = isObjectOfType(\"Uint8Array\"\n  /* Uint8Array */\n  );\n  is.uint8ClampedArray = isObjectOfType(\"Uint8ClampedArray\"\n  /* Uint8ClampedArray */\n  );\n  is.int16Array = isObjectOfType(\"Int16Array\"\n  /* Int16Array */\n  );\n  is.uint16Array = isObjectOfType(\"Uint16Array\"\n  /* Uint16Array */\n  );\n  is.int32Array = isObjectOfType(\"Int32Array\"\n  /* Int32Array */\n  );\n  is.uint32Array = isObjectOfType(\"Uint32Array\"\n  /* Uint32Array */\n  );\n  is.float32Array = isObjectOfType(\"Float32Array\"\n  /* Float32Array */\n  );\n  is.float64Array = isObjectOfType(\"Float64Array\"\n  /* Float64Array */\n  );\n  is.arrayBuffer = isObjectOfType(\"ArrayBuffer\"\n  /* ArrayBuffer */\n  );\n  is.sharedArrayBuffer = isObjectOfType(\"SharedArrayBuffer\"\n  /* SharedArrayBuffer */\n  );\n  is.dataView = isObjectOfType(\"DataView\"\n  /* DataView */\n  );\n\n  is.directInstanceOf = function (instance, klass) {\n    return Object.getPrototypeOf(instance) === klass.prototype;\n  };\n\n  is.urlInstance = function (value) {\n    return isObjectOfType(\"URL\"\n    /* URL */\n    )(value);\n  };\n\n  is.urlString = function (value) {\n    if (!is.string(value)) {\n      return false;\n    }\n\n    try {\n      new URLGlobal(value); // tslint:disable-line no-unused-expression\n\n      return true;\n    } catch (_a) {\n      return false;\n    }\n  };\n\n  is.truthy = function (value) {\n    return Boolean(value);\n  };\n\n  is.falsy = function (value) {\n    return !value;\n  };\n\n  is.nan = function (value) {\n    return Number.isNaN(value);\n  };\n\n  var primitiveTypes = new Set(['undefined', 'string', 'number', 'boolean', 'symbol']);\n\n  is.primitive = function (value) {\n    return is.null_(value) || primitiveTypes.has(typeof value);\n  };\n\n  is.integer = function (value) {\n    return Number.isInteger(value);\n  };\n\n  is.safeInteger = function (value) {\n    return Number.isSafeInteger(value);\n  };\n\n  is.plainObject = function (value) {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js\n    var prototype;\n    return getObjectType(value) === \"Object\"\n    /* Object */\n    && (prototype = Object.getPrototypeOf(value), prototype === null || // tslint:disable-line:ban-comma-operator\n    prototype === Object.getPrototypeOf({}));\n  };\n\n  var typedArrayTypes = new Set([\"Int8Array\"\n  /* Int8Array */\n  , \"Uint8Array\"\n  /* Uint8Array */\n  , \"Uint8ClampedArray\"\n  /* Uint8ClampedArray */\n  , \"Int16Array\"\n  /* Int16Array */\n  , \"Uint16Array\"\n  /* Uint16Array */\n  , \"Int32Array\"\n  /* Int32Array */\n  , \"Uint32Array\"\n  /* Uint32Array */\n  , \"Float32Array\"\n  /* Float32Array */\n  , \"Float64Array\"\n  /* Float64Array */\n  ]);\n\n  is.typedArray = function (value) {\n    var objectType = getObjectType(value);\n\n    if (objectType === null) {\n      return false;\n    }\n\n    return typedArrayTypes.has(objectType);\n  };\n\n  var isValidLength = function isValidLength(value) {\n    return is.safeInteger(value) && value > -1;\n  };\n\n  is.arrayLike = function (value) {\n    return !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\n  };\n\n  is.inRange = function (value, range) {\n    if (is.number(range)) {\n      return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n\n    if (is.array(range) && range.length === 2) {\n      return value >= Math.min.apply(Math, _toConsumableArray(range)) && value <= Math.max.apply(Math, _toConsumableArray(range));\n    }\n\n    throw new TypeError(\"Invalid range: \".concat(JSON.stringify(range)));\n  };\n\n  var NODE_TYPE_ELEMENT = 1;\n  var DOM_PROPERTIES_TO_CHECK = ['innerHTML', 'ownerDocument', 'style', 'attributes', 'nodeValue'];\n\n  is.domElement = function (value) {\n    return is.object(value) && value.nodeType === NODE_TYPE_ELEMENT && is.string(value.nodeName) && !is.plainObject(value) && DOM_PROPERTIES_TO_CHECK.every(function (property) {\n      return property in value;\n    });\n  };\n\n  is.observable = function (value) {\n    if (!value) {\n      return false;\n    }\n\n    if (value[Symbol.observable] && value === value[Symbol.observable]()) {\n      return true;\n    }\n\n    if (value['@@observable'] && value === value['@@observable']()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  is.nodeStream = function (value) {\n    return !is.nullOrUndefined(value) && isObject(value) && is.function_(value.pipe) && !is.observable(value);\n  };\n\n  is.infinite = function (value) {\n    return value === Infinity || value === -Infinity;\n  };\n\n  var isAbsoluteMod2 = function isAbsoluteMod2(rem) {\n    return function (value) {\n      return is.integer(value) && Math.abs(value % 2) === rem;\n    };\n  };\n\n  is.even = isAbsoluteMod2(0);\n  is.odd = isAbsoluteMod2(1);\n\n  var isWhiteSpaceString = function isWhiteSpaceString(value) {\n    return is.string(value) && /\\S/.test(value) === false;\n  };\n\n  is.emptyArray = function (value) {\n    return is.array(value) && value.length === 0;\n  };\n\n  is.nonEmptyArray = function (value) {\n    return is.array(value) && value.length > 0;\n  };\n\n  is.emptyString = function (value) {\n    return is.string(value) && value.length === 0;\n  };\n\n  is.nonEmptyString = function (value) {\n    return is.string(value) && value.length > 0;\n  };\n\n  is.emptyStringOrWhitespace = function (value) {\n    return is.emptyString(value) || isWhiteSpaceString(value);\n  };\n\n  is.emptyObject = function (value) {\n    return is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n  };\n\n  is.nonEmptyObject = function (value) {\n    return is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\n  };\n\n  is.emptySet = function (value) {\n    return is.set(value) && value.size === 0;\n  };\n\n  is.nonEmptySet = function (value) {\n    return is.set(value) && value.size > 0;\n  };\n\n  is.emptyMap = function (value) {\n    return is.map(value) && value.size === 0;\n  };\n\n  is.nonEmptyMap = function (value) {\n    return is.map(value) && value.size > 0;\n  };\n\n  var predicateOnArray = function predicateOnArray(method, predicate, values) {\n    if (is.function_(predicate) === false) {\n      throw new TypeError(\"Invalid predicate: \".concat(JSON.stringify(predicate)));\n    }\n\n    if (values.length === 0) {\n      throw new TypeError('Invalid number of values');\n    }\n\n    return method.call(values, predicate);\n  }; // tslint:disable variable-name\n\n\n  is.any = function (predicate) {\n    for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      values[_key - 1] = arguments[_key];\n    }\n\n    return predicateOnArray(Array.prototype.some, predicate, values);\n  };\n\n  is.all = function (predicate) {\n    for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      values[_key2 - 1] = arguments[_key2];\n    }\n\n    return predicateOnArray(Array.prototype.every, predicate, values);\n  }; // tslint:enable variable-name\n\n})(is || (is = {})); // Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\n\n\nObject.defineProperties(is, {\n  class: {\n    value: is.class_\n  },\n  function: {\n    value: is.function_\n  },\n  null: {\n    value: is.null_\n  }\n});\nexports.default = is; // For CommonJS default export support\n\nmodule.exports = is;\nmodule.exports.default = is;","map":{"version":3,"sources":["../source/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/// <reference lib=\"es2016\"/>\n/// <reference lib=\"es2017.sharedmemory\"/>\n/// <reference lib=\"esnext.asynciterable\"/>\n/// <reference lib=\"dom\"/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Use the `URL` global when targeting Node.js 10\n// tslint:disable-next-line\nconst URLGlobal = typeof URL === 'undefined' ? require('url').URL : URL;\nconst toString = Object.prototype.toString;\nconst isOfType = (type) => (value) => typeof value === type;\nconst isBuffer = (input) => !is.nullOrUndefined(input) && !is.nullOrUndefined(input.constructor) && is.function_(input.constructor.isBuffer) && input.constructor.isBuffer(input);\nconst getObjectType = (value) => {\n    const objectName = toString.call(value).slice(8, -1);\n    if (objectName) {\n        return objectName;\n    }\n    return null;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    switch (value) {\n        case null:\n            return \"null\" /* null */;\n        case true:\n        case false:\n            return \"boolean\" /* boolean */;\n        default:\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return \"undefined\" /* undefined */;\n        case 'string':\n            return \"string\" /* string */;\n        case 'number':\n            return \"number\" /* number */;\n        case 'symbol':\n            return \"symbol\" /* symbol */;\n        default:\n    }\n    if (is.function_(value)) {\n        return \"Function\" /* Function */;\n    }\n    if (is.observable(value)) {\n        return \"Observable\" /* Observable */;\n    }\n    if (Array.isArray(value)) {\n        return \"Array\" /* Array */;\n    }\n    if (isBuffer(value)) {\n        return \"Buffer\" /* Buffer */;\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return \"Object\" /* Object */;\n}\n(function (is) {\n    // tslint:disable-next-line:strict-type-predicates\n    const isObject = (value) => typeof value === 'object';\n    // tslint:disable:variable-name\n    is.undefined = isOfType('undefined');\n    is.string = isOfType('string');\n    is.number = isOfType('number');\n    is.function_ = isOfType('function');\n    // tslint:disable-next-line:strict-type-predicates\n    is.null_ = (value) => value === null;\n    is.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\n    is.boolean = (value) => value === true || value === false;\n    is.symbol = isOfType('symbol');\n    // tslint:enable:variable-name\n    is.numericString = (value) => is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n    is.array = Array.isArray;\n    is.buffer = isBuffer;\n    is.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\n    is.object = (value) => !is.nullOrUndefined(value) && (is.function_(value) || isObject(value));\n    is.iterable = (value) => !is.nullOrUndefined(value) && is.function_(value[Symbol.iterator]);\n    is.asyncIterable = (value) => !is.nullOrUndefined(value) && is.function_(value[Symbol.asyncIterator]);\n    is.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\n    is.nativePromise = (value) => isObjectOfType(\"Promise\" /* Promise */)(value);\n    const hasPromiseAPI = (value) => !is.null_(value) &&\n        isObject(value) &&\n        is.function_(value.then) &&\n        is.function_(value.catch);\n    is.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\n    is.generatorFunction = isObjectOfType(\"GeneratorFunction\" /* GeneratorFunction */);\n    is.asyncFunction = isObjectOfType(\"AsyncFunction\" /* AsyncFunction */);\n    is.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\n    is.regExp = isObjectOfType(\"RegExp\" /* RegExp */);\n    is.date = isObjectOfType(\"Date\" /* Date */);\n    is.error = isObjectOfType(\"Error\" /* Error */);\n    is.map = (value) => isObjectOfType(\"Map\" /* Map */)(value);\n    is.set = (value) => isObjectOfType(\"Set\" /* Set */)(value);\n    is.weakMap = (value) => isObjectOfType(\"WeakMap\" /* WeakMap */)(value);\n    is.weakSet = (value) => isObjectOfType(\"WeakSet\" /* WeakSet */)(value);\n    is.int8Array = isObjectOfType(\"Int8Array\" /* Int8Array */);\n    is.uint8Array = isObjectOfType(\"Uint8Array\" /* Uint8Array */);\n    is.uint8ClampedArray = isObjectOfType(\"Uint8ClampedArray\" /* Uint8ClampedArray */);\n    is.int16Array = isObjectOfType(\"Int16Array\" /* Int16Array */);\n    is.uint16Array = isObjectOfType(\"Uint16Array\" /* Uint16Array */);\n    is.int32Array = isObjectOfType(\"Int32Array\" /* Int32Array */);\n    is.uint32Array = isObjectOfType(\"Uint32Array\" /* Uint32Array */);\n    is.float32Array = isObjectOfType(\"Float32Array\" /* Float32Array */);\n    is.float64Array = isObjectOfType(\"Float64Array\" /* Float64Array */);\n    is.arrayBuffer = isObjectOfType(\"ArrayBuffer\" /* ArrayBuffer */);\n    is.sharedArrayBuffer = isObjectOfType(\"SharedArrayBuffer\" /* SharedArrayBuffer */);\n    is.dataView = isObjectOfType(\"DataView\" /* DataView */);\n    is.directInstanceOf = (instance, klass) => Object.getPrototypeOf(instance) === klass.prototype;\n    is.urlInstance = (value) => isObjectOfType(\"URL\" /* URL */)(value);\n    is.urlString = (value) => {\n        if (!is.string(value)) {\n            return false;\n        }\n        try {\n            new URLGlobal(value); // tslint:disable-line no-unused-expression\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    is.truthy = (value) => Boolean(value);\n    is.falsy = (value) => !value;\n    is.nan = (value) => Number.isNaN(value);\n    const primitiveTypes = new Set([\n        'undefined',\n        'string',\n        'number',\n        'boolean',\n        'symbol'\n    ]);\n    is.primitive = (value) => is.null_(value) || primitiveTypes.has(typeof value);\n    is.integer = (value) => Number.isInteger(value);\n    is.safeInteger = (value) => Number.isSafeInteger(value);\n    is.plainObject = (value) => {\n        // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js\n        let prototype;\n        return getObjectType(value) === \"Object\" /* Object */ &&\n            (prototype = Object.getPrototypeOf(value), prototype === null || // tslint:disable-line:ban-comma-operator\n                prototype === Object.getPrototypeOf({}));\n    };\n    const typedArrayTypes = new Set([\n        \"Int8Array\" /* Int8Array */,\n        \"Uint8Array\" /* Uint8Array */,\n        \"Uint8ClampedArray\" /* Uint8ClampedArray */,\n        \"Int16Array\" /* Int16Array */,\n        \"Uint16Array\" /* Uint16Array */,\n        \"Int32Array\" /* Int32Array */,\n        \"Uint32Array\" /* Uint32Array */,\n        \"Float32Array\" /* Float32Array */,\n        \"Float64Array\" /* Float64Array */\n    ]);\n    is.typedArray = (value) => {\n        const objectType = getObjectType(value);\n        if (objectType === null) {\n            return false;\n        }\n        return typedArrayTypes.has(objectType);\n    };\n    const isValidLength = (value) => is.safeInteger(value) && value > -1;\n    is.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\n    is.inRange = (value, range) => {\n        if (is.number(range)) {\n            return value >= Math.min(0, range) && value <= Math.max(range, 0);\n        }\n        if (is.array(range) && range.length === 2) {\n            return value >= Math.min(...range) && value <= Math.max(...range);\n        }\n        throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n    };\n    const NODE_TYPE_ELEMENT = 1;\n    const DOM_PROPERTIES_TO_CHECK = [\n        'innerHTML',\n        'ownerDocument',\n        'style',\n        'attributes',\n        'nodeValue'\n    ];\n    is.domElement = (value) => is.object(value) && value.nodeType === NODE_TYPE_ELEMENT && is.string(value.nodeName) &&\n        !is.plainObject(value) && DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n    is.observable = (value) => {\n        if (!value) {\n            return false;\n        }\n        if (value[Symbol.observable] && value === value[Symbol.observable]()) {\n            return true;\n        }\n        if (value['@@observable'] && value === value['@@observable']()) {\n            return true;\n        }\n        return false;\n    };\n    is.nodeStream = (value) => !is.nullOrUndefined(value) && isObject(value) && is.function_(value.pipe) && !is.observable(value);\n    is.infinite = (value) => value === Infinity || value === -Infinity;\n    const isAbsoluteMod2 = (rem) => (value) => is.integer(value) && Math.abs(value % 2) === rem;\n    is.even = isAbsoluteMod2(0);\n    is.odd = isAbsoluteMod2(1);\n    const isWhiteSpaceString = (value) => is.string(value) && /\\S/.test(value) === false;\n    is.emptyArray = (value) => is.array(value) && value.length === 0;\n    is.nonEmptyArray = (value) => is.array(value) && value.length > 0;\n    is.emptyString = (value) => is.string(value) && value.length === 0;\n    is.nonEmptyString = (value) => is.string(value) && value.length > 0;\n    is.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\n    is.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n    is.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\n    is.emptySet = (value) => is.set(value) && value.size === 0;\n    is.nonEmptySet = (value) => is.set(value) && value.size > 0;\n    is.emptyMap = (value) => is.map(value) && value.size === 0;\n    is.nonEmptyMap = (value) => is.map(value) && value.size > 0;\n    const predicateOnArray = (method, predicate, values) => {\n        if (is.function_(predicate) === false) {\n            throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n        }\n        if (values.length === 0) {\n            throw new TypeError('Invalid number of values');\n        }\n        return method.call(values, predicate);\n    };\n    // tslint:disable variable-name\n    is.any = (predicate, ...values) => predicateOnArray(Array.prototype.some, predicate, values);\n    is.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\n    // tslint:enable variable-name\n})(is || (is = {}));\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nexports.default = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports.default = is;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}