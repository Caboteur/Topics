{"ast":null,"code":"'use strict';\n\nvar _require = require('stream'),\n    PassThrough = _require.PassThrough;\n\nmodule.exports = function (options) {\n  options = Object.assign({}, options);\n  var _options = options,\n      array = _options.array;\n  var _options2 = options,\n      encoding = _options2.encoding;\n  var buffer = encoding === 'buffer';\n  var objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || buffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (buffer) {\n    encoding = null;\n  }\n\n  var len = 0;\n  var ret = [];\n  var stream = new PassThrough({\n    objectMode: objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  stream.on('data', function (chunk) {\n    ret.push(chunk);\n\n    if (objectMode) {\n      len = ret.length;\n    } else {\n      len += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = function () {\n    if (array) {\n      return ret;\n    }\n\n    return buffer ? Buffer.concat(ret, len) : ret.join('');\n  };\n\n  stream.getBufferedLength = function () {\n    return len;\n  };\n\n  return stream;\n};","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/@vitalets/google-translate-api/node_modules/get-stream/buffer-stream.js"],"names":["require","PassThrough","module","exports","options","Object","assign","array","encoding","buffer","objectMode","len","ret","stream","setEncoding","on","chunk","push","length","getBufferedValue","Buffer","concat","join","getBufferedLength"],"mappings":"AAAA;;eACsBA,OAAO,CAAC,QAAD,C;IAAtBC,W,YAAAA,W;;AAEPC,MAAM,CAACC,OAAP,GAAiB,UAAAC,OAAO,EAAI;AAC3BA,EAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,CAAV;AAD2B,iBAGXA,OAHW;AAAA,MAGpBG,KAHoB,YAGpBA,KAHoB;AAAA,kBAIVH,OAJU;AAAA,MAItBI,QAJsB,aAItBA,QAJsB;AAK3B,MAAMC,MAAM,GAAGD,QAAQ,KAAK,QAA5B;AACA,MAAIE,UAAU,GAAG,KAAjB;;AAEA,MAAIH,KAAJ,EAAW;AACVG,IAAAA,UAAU,GAAG,EAAEF,QAAQ,IAAIC,MAAd,CAAb;AACA,GAFD,MAEO;AACND,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,MAAvB;AACA;;AAED,MAAIC,MAAJ,EAAY;AACXD,IAAAA,QAAQ,GAAG,IAAX;AACA;;AAED,MAAIG,GAAG,GAAG,CAAV;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,MAAM,GAAG,IAAIZ,WAAJ,CAAgB;AAACS,IAAAA,UAAU,EAAVA;AAAD,GAAhB,CAAf;;AAEA,MAAIF,QAAJ,EAAc;AACbK,IAAAA,MAAM,CAACC,WAAP,CAAmBN,QAAnB;AACA;;AAEDK,EAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,UAAAC,KAAK,EAAI;AAC1BJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,KAAT;;AAEA,QAAIN,UAAJ,EAAgB;AACfC,MAAAA,GAAG,GAAGC,GAAG,CAACM,MAAV;AACA,KAFD,MAEO;AACNP,MAAAA,GAAG,IAAIK,KAAK,CAACE,MAAb;AACA;AACD,GARD;;AAUAL,EAAAA,MAAM,CAACM,gBAAP,GAA0B,YAAM;AAC/B,QAAIZ,KAAJ,EAAW;AACV,aAAOK,GAAP;AACA;;AAED,WAAOH,MAAM,GAAGW,MAAM,CAACC,MAAP,CAAcT,GAAd,EAAmBD,GAAnB,CAAH,GAA6BC,GAAG,CAACU,IAAJ,CAAS,EAAT,CAA1C;AACA,GAND;;AAQAT,EAAAA,MAAM,CAACU,iBAAP,GAA2B;AAAA,WAAMZ,GAAN;AAAA,GAA3B;;AAEA,SAAOE,MAAP;AACA,CA/CD","sourcesContent":["'use strict';\nconst {PassThrough} = require('stream');\n\nmodule.exports = options => {\n\toptions = Object.assign({}, options);\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst buffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || buffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (buffer) {\n\t\tencoding = null;\n\t}\n\n\tlet len = 0;\n\tconst ret = [];\n\tconst stream = new PassThrough({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tstream.on('data', chunk => {\n\t\tret.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlen = ret.length;\n\t\t} else {\n\t\t\tlen += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn buffer ? Buffer.concat(ret, len) : ret.join('');\n\t};\n\n\tstream.getBufferedLength = () => len;\n\n\treturn stream;\n};\n"]},"metadata":{},"sourceType":"script"}