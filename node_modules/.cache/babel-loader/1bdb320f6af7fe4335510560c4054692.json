{"ast":null,"code":"import wiki from 'wikijs';\n\nvar wikiped = function wikiped(data) {\n  var wikiSearchReturnValues = [];\n  var url = \"https://fr.wikipedia.org/w/api.php\";\n  var params = {\n    action: 'query',\n    list: 'search',\n    srsearch: data,\n    format: 'json'\n  };\n  url = url + '?origin=*';\n  Object.keys(params).forEach(function (key) {\n    url += \"&\" + key + \"=\" + params[key];\n  });\n  fetch(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    for (var key in response.query.search) {\n      wikiSearchReturnValues.push({\n        queryResultPageFullURL: 'no link',\n        queryResultPageID: response.query.search[key].pageid,\n        queryResultPageTitle: response.query.search[key].title,\n        queryResultPageSnippet: response.query.search[key].snippet\n      });\n    }\n  }).then(function (response) {\n    // console.log(pointerToThis.state.wikiSearchReturnValues);\n    var page = wikiSearchReturnValues[0];\n    var pageID = page.queryResultPageID;\n    var urlForRetrievingPageURLByPageID = \"https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=\".concat(pageID, \"&inprop=url&format=json\");\n\n    function jo(result) {\n      wiki({}).page(result).then(function (page) {\n        return console.log(page.pageid);\n      });\n    }\n\n    jo();\n    fetch(urlForRetrievingPageURLByPageID).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\n      console.log(page.queryResultPageFullURL);\n    });\n  });\n};\n\nexport default wikiped;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/src/components/Api/wikiped.js"],"names":["wiki","wikiped","data","wikiSearchReturnValues","url","params","action","list","srsearch","format","Object","keys","forEach","key","fetch","then","response","json","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","title","queryResultPageSnippet","snippet","page","pageID","urlForRetrievingPageURLByPageID","jo","result","console","log","pages","fullurl"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAEC,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAQ;AAEtB,MAAMC,sBAAsB,GAAG,EAA/B;AAEE,MAAIC,GAAG,GAAG,oCAAV;AAEA,MAAIC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,OADG;AAEXC,IAAAA,IAAI,EAAE,QAFK;AAGXC,IAAAA,QAAQ,EAAEN,IAHC;AAIXO,IAAAA,MAAM,EAAE;AAJG,GAAb;AAOAL,EAAAA,GAAG,GAAGA,GAAG,GAAG,WAAZ;AACAM,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnCT,IAAAA,GAAG,IAAI,MAAMS,GAAN,GAAY,GAAZ,GAAkBR,MAAM,CAACQ,GAAD,CAA/B;AACD,GAFD;AAIAC,EAAAA,KAAK,CAACV,GAAD,CAAL,CACGW,IADH,CAEI,UAAUC,QAAV,EAAoB;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAJL,EAMGF,IANH,CAOI,UAAUC,QAAV,EAAoB;AAGlB,SAAK,IAAIH,GAAT,IAAgBG,QAAQ,CAACE,KAAT,CAAeC,MAA/B,EAAuC;AACtChB,MAAAA,sBAAsB,CAACiB,IAAvB,CAA4B;AACzBC,QAAAA,sBAAsB,EAAE,SADC;AAEzBC,QAAAA,iBAAiB,EAAEN,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BU,MAFrB;AAGzBC,QAAAA,oBAAoB,EAAER,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BY,KAHxB;AAIzBC,QAAAA,sBAAsB,EAAEV,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2Bc;AAJ1B,OAA5B;AAMA;AACF,GAlBL,EAoBGZ,IApBH,CAqBI,UAAUC,QAAV,EAAoB;AAEhB;AACA,QAAIY,IAAI,GAAGzB,sBAAsB,CAAC,CAAD,CAAjC;AACA,QAAI0B,MAAM,GAAGD,IAAI,CAACN,iBAAlB;AACA,QAAIQ,+BAA+B,wFAAiFD,MAAjF,4BAAnC;;AACA,aAASE,EAAT,CAAYC,MAAZ,EAAmB;AACjBhC,MAAAA,IAAI,CAAC,EAAD,CAAJ,CACC4B,IADD,CACMI,MADN,EAECjB,IAFD,CAEM,UAAAa,IAAI;AAAA,eAAIK,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACL,MAAjB,CAAJ;AAAA,OAFV;AAID;;AACDQ,IAAAA,EAAE;AAEFjB,IAAAA,KAAK,CAACgB,+BAAD,CAAL,CACGf,IADH,CAEI,UAAUC,QAAV,EAAoB;AAElB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALL,EAOGF,IAPH,CAQI,UAAUC,QAAV,EAAoB;AAClBY,MAAAA,IAAI,CAACP,sBAAL,GAA8BL,QAAQ,CAACE,KAAT,CAAeiB,KAAf,CAAqBN,MAArB,EAA6BO,OAA3D;AACDH,MAAAA,OAAO,CAACC,GAAR,CAAaN,IAAI,CAACP,sBAAlB;AAEA,KAZL;AAeH,GAlDL;AAqDD,CAvEH;;AA4ED,eAAepB,OAAf","sourcesContent":["import wiki from 'wikijs'\r\n\r\n const wikiped = (data)=>{\r\n\r\n   const wikiSearchReturnValues = []\r\n\r\n     var url = \"https://fr.wikipedia.org/w/api.php\";\r\n\r\n     var params = {\r\n       action: 'query',\r\n       list: 'search',\r\n       srsearch: data,\r\n       format: 'json'\r\n     };\r\n\r\n     url = url + '?origin=*';\r\n     Object.keys(params).forEach((key) => {\r\n       url += \"&\" + key + \"=\" + params[key];\r\n     });\r\n\r\n     fetch(url)\r\n       .then(\r\n         function (response) {\r\n           return response.json();\r\n         }\r\n       )\r\n       .then(\r\n         function (response) {\r\n\r\n\r\n           for (var key in response.query.search) {\r\n            wikiSearchReturnValues.push({\r\n               queryResultPageFullURL: 'no link',\r\n               queryResultPageID: response.query.search[key].pageid,\r\n               queryResultPageTitle: response.query.search[key].title,\r\n               queryResultPageSnippet: response.query.search[key].snippet\r\n             });\r\n           }\r\n         }\r\n       )\r\n       .then(\r\n         function (response) {\r\n\r\n             // console.log(pointerToThis.state.wikiSearchReturnValues);\r\n             let page = wikiSearchReturnValues[0];\r\n             let pageID = page.queryResultPageID;\r\n             let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n             function jo(result){\r\n               wiki({})\r\n               .page(result)\r\n               .then(page => console.log(page.pageid));\r\n\r\n             }\r\n             jo()\r\n\r\n             fetch(urlForRetrievingPageURLByPageID)\r\n               .then(\r\n                 function (response) {\r\n\r\n                   return response.json();\r\n                 }\r\n               )\r\n               .then(\r\n                 function (response) {\r\n                   page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\r\n                  console.log( page.queryResultPageFullURL)\r\n\r\n                 }\r\n               )\r\n\r\n         }\r\n       )\r\n\r\n   }\r\n\r\n\r\n\r\n\r\nexport default wikiped\r\n"]},"metadata":{},"sourceType":"module"}