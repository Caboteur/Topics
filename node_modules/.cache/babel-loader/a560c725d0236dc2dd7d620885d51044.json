{"ast":null,"code":"'use strict';\n\nvar captureStackTrace = require('capture-stack-trace');\n\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = function createErrorClass(className, setup) {\n  if (typeof className !== 'string') {\n    throw new TypeError('Expected className to be a string');\n  }\n\n  if (/[^0-9a-zA-Z_$]/.test(className)) {\n    throw new Error('className contains invalid characters');\n  }\n\n  setup = setup || function (message) {\n    this.message = message;\n  };\n\n  var ErrorClass = function ErrorClass() {\n    Object.defineProperty(this, 'name', {\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    captureStackTrace(this, this.constructor);\n    setup.apply(this, arguments);\n  };\n\n  inherits(ErrorClass, Error);\n  return ErrorClass;\n};","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/create-error-class/index.js"],"names":["captureStackTrace","require","inherits","ctor","superCtor","super_","prototype","Object","create","constructor","value","enumerable","writable","configurable","module","exports","createErrorClass","className","setup","TypeError","test","Error","message","ErrorClass","defineProperty","apply","arguments"],"mappings":"AAAA;;AACA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,SAAxB,EAAmC;AAClCD,EAAAA,IAAI,CAACE,MAAL,GAAcD,SAAd;AACAD,EAAAA,IAAI,CAACG,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAcJ,SAAS,CAACE,SAAxB,EAAmC;AACnDG,IAAAA,WAAW,EAAE;AACZC,MAAAA,KAAK,EAAEP,IADK;AAEZQ,MAAAA,UAAU,EAAE,KAFA;AAGZC,MAAAA,QAAQ,EAAE,IAHE;AAIZC,MAAAA,YAAY,EAAE;AAJF;AADsC,GAAnC,CAAjB;AAQA;;AAEDC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,KAArC,EAA4C;AAC5D,MAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;AAClC,UAAM,IAAIE,SAAJ,CAAc,mCAAd,CAAN;AACA;;AAED,MAAI,iBAAiBC,IAAjB,CAAsBH,SAAtB,CAAJ,EAAsC;AACrC,UAAM,IAAII,KAAJ,CAAU,uCAAV,CAAN;AACA;;AAEDH,EAAAA,KAAK,GAAGA,KAAK,IAAI,UAAUI,OAAV,EAAmB;AACnC,SAAKA,OAAL,GAAeA,OAAf;AACA,GAFD;;AAIA,MAAIC,UAAU,GAAG,SAAbA,UAAa,GAAY;AAC5BhB,IAAAA,MAAM,CAACiB,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;AACnCX,MAAAA,YAAY,EAAE,IADqB;AAEnCH,MAAAA,KAAK,EAAEO,SAF4B;AAGnCL,MAAAA,QAAQ,EAAE;AAHyB,KAApC;AAMAZ,IAAAA,iBAAiB,CAAC,IAAD,EAAO,KAAKS,WAAZ,CAAjB;AAEAS,IAAAA,KAAK,CAACO,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACA,GAVD;;AAYAxB,EAAAA,QAAQ,CAACqB,UAAD,EAAaF,KAAb,CAAR;AAEA,SAAOE,UAAP;AACA,CA5BD","sourcesContent":["'use strict';\nvar captureStackTrace = require('capture-stack-trace');\n\nfunction inherits(ctor, superCtor) {\n\tctor.super_ = superCtor;\n\tctor.prototype = Object.create(superCtor.prototype, {\n\t\tconstructor: {\n\t\t\tvalue: ctor,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t}\n\t});\n}\n\nmodule.exports = function createErrorClass(className, setup) {\n\tif (typeof className !== 'string') {\n\t\tthrow new TypeError('Expected className to be a string');\n\t}\n\n\tif (/[^0-9a-zA-Z_$]/.test(className)) {\n\t\tthrow new Error('className contains invalid characters');\n\t}\n\n\tsetup = setup || function (message) {\n\t\tthis.message = message;\n\t};\n\n\tvar ErrorClass = function () {\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tconfigurable: true,\n\t\t\tvalue: className,\n\t\t\twritable: true\n\t\t});\n\n\t\tcaptureStackTrace(this, this.constructor);\n\n\t\tsetup.apply(this, arguments);\n\t};\n\n\tinherits(ErrorClass, Error);\n\n\treturn ErrorClass;\n};\n"]},"metadata":{},"sourceType":"script"}