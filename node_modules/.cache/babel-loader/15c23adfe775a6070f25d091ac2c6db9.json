{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar fs = require('fs');\n\nvar util = require('util');\n\nvar is = require('@sindresorhus/is');\n\nvar isFormData = require('./is-form-data');\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(options) {\n    var body, _ref2, size;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = options.body;\n\n            if (!options.headers['content-length']) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Number(options.headers['content-length']));\n\n          case 3:\n            if (!(!body && !options.stream)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", 0);\n\n          case 5:\n            if (!is.string(body)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Buffer.byteLength(body));\n\n          case 7:\n            if (!isFormData(body)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", util.promisify(body.getLength.bind(body))());\n\n          case 9:\n            if (!(body instanceof fs.ReadStream)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.next = 12;\n            return util.promisify(fs.stat)(body.path);\n\n          case 12:\n            _ref2 = _context.sent;\n            size = _ref2.size;\n            return _context.abrupt(\"return\", size);\n\n          case 15:\n            return _context.abrupt(\"return\", null);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/@vitalets/google-translate-api/node_modules/got/source/utils/get-body-size.js"],"names":["fs","require","util","is","isFormData","module","exports","options","body","headers","Number","stream","string","Buffer","byteLength","promisify","getLength","bind","ReadStream","stat","path","size"],"mappings":"AAAA;;;;;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,gBAAD,CAA1B;;AAEAI,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAiB,iBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,IADS,GACDD,OADC,CACTC,IADS;;AAAA,iBAGZD,OAAO,CAACE,OAAR,CAAgB,gBAAhB,CAHY;AAAA;AAAA;AAAA;;AAAA,6CAIRC,MAAM,CAACH,OAAO,CAACE,OAAR,CAAgB,gBAAhB,CAAD,CAJE;;AAAA;AAAA,kBAOZ,CAACD,IAAD,IAAS,CAACD,OAAO,CAACI,MAPN;AAAA;AAAA;AAAA;;AAAA,6CAQR,CARQ;;AAAA;AAAA,iBAWZR,EAAE,CAACS,MAAH,CAAUJ,IAAV,CAXY;AAAA;AAAA;AAAA;;AAAA,6CAYRK,MAAM,CAACC,UAAP,CAAkBN,IAAlB,CAZQ;;AAAA;AAAA,iBAeZJ,UAAU,CAACI,IAAD,CAfE;AAAA;AAAA;AAAA;;AAAA,6CAgBRN,IAAI,CAACa,SAAL,CAAeP,IAAI,CAACQ,SAAL,CAAeC,IAAf,CAAoBT,IAApB,CAAf,GAhBQ;;AAAA;AAAA,kBAmBZA,IAAI,YAAYR,EAAE,CAACkB,UAnBP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBMhB,IAAI,CAACa,SAAL,CAAef,EAAE,CAACmB,IAAlB,EAAwBX,IAAI,CAACY,IAA7B,CApBN;;AAAA;AAAA;AAoBRC,YAAAA,IApBQ,SAoBRA,IApBQ;AAAA,6CAqBRA,IArBQ;;AAAA;AAAA,6CAwBT,IAxBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst util = require('util');\nconst is = require('@sindresorhus/is');\nconst isFormData = require('./is-form-data');\n\nmodule.exports = async options => {\n\tconst {body} = options;\n\n\tif (options.headers['content-length']) {\n\t\treturn Number(options.headers['content-length']);\n\t}\n\n\tif (!body && !options.stream) {\n\t\treturn 0;\n\t}\n\n\tif (is.string(body)) {\n\t\treturn Buffer.byteLength(body);\n\t}\n\n\tif (isFormData(body)) {\n\t\treturn util.promisify(body.getLength.bind(body))();\n\t}\n\n\tif (body instanceof fs.ReadStream) {\n\t\tconst {size} = await util.promisify(fs.stat)(body.path);\n\t\treturn size;\n\t}\n\n\treturn null;\n};\n"]},"metadata":{},"sourceType":"script"}