{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar fs = require('graceful-fs');\n\nvar osenv = require('osenv');\n\nvar assign = require('object-assign');\n\nvar mkdirp = require('mkdirp');\n\nvar uuid = require('uuid');\n\nvar xdgBasedir = require('xdg-basedir');\n\nvar osTmpdir = require('os-tmpdir');\n\nvar writeFileAtomic = require('write-file-atomic');\n\nvar dotProp = require('dot-prop');\n\nvar user = (osenv.user() || uuid.v4()).replace(/\\\\/g, '');\nvar configDir = xdgBasedir.config || path.join(osTmpdir(), user, '.config');\nvar permissionError = 'You don\\'t have access to this file.';\nvar defaultPathMode = parseInt('0700', 8);\nvar writeFileOptions = {\n  mode: parseInt('0600', 8)\n};\n\nfunction Configstore(id, defaults, opts) {\n  opts = opts || {};\n  var pathPrefix = opts.globalConfigPath ? path.join(id, 'config.json') : path.join('configstore', id + '.json');\n  this.path = path.join(configDir, pathPrefix);\n  this.all = assign({}, defaults || {}, this.all || {});\n}\n\nConfigstore.prototype = Object.create(Object.prototype, {\n  all: {\n    get: function get() {\n      try {\n        return JSON.parse(fs.readFileSync(this.path, 'utf8'));\n      } catch (err) {\n        // create dir if it doesn't exist\n        if (err.code === 'ENOENT') {\n          mkdirp.sync(path.dirname(this.path), defaultPathMode);\n          return {};\n        } // improve the message of permission errors\n\n\n        if (err.code === 'EACCES') {\n          err.message = err.message + '\\n' + permissionError + '\\n';\n        } // empty the file if it encounters invalid JSON\n\n\n        if (err.name === 'SyntaxError') {\n          writeFileAtomic.sync(this.path, '', writeFileOptions);\n          return {};\n        }\n\n        throw err;\n      }\n    },\n    set: function set(val) {\n      try {\n        // make sure the folder exists as it\n        // could have been deleted in the meantime\n        mkdirp.sync(path.dirname(this.path), defaultPathMode);\n        writeFileAtomic.sync(this.path, JSON.stringify(val, null, '\\t'), writeFileOptions);\n      } catch (err) {\n        // improve the message of permission errors\n        if (err.code === 'EACCES') {\n          err.message = err.message + '\\n' + permissionError + '\\n';\n        }\n\n        throw err;\n      }\n    }\n  },\n  size: {\n    get: function get() {\n      return Object.keys(this.all || {}).length;\n    }\n  }\n});\n\nConfigstore.prototype.get = function (key) {\n  return dotProp.get(this.all, key);\n};\n\nConfigstore.prototype.set = function (key, val) {\n  var config = this.all;\n\n  if (arguments.length === 1) {\n    Object.keys(key).forEach(function (k) {\n      dotProp.set(config, k, key[k]);\n    });\n  } else {\n    dotProp.set(config, key, val);\n  }\n\n  this.all = config;\n};\n\nConfigstore.prototype.has = function (key) {\n  return dotProp.has(this.all, key);\n};\n\nConfigstore.prototype.delete = Configstore.prototype.del = function (key) {\n  var config = this.all;\n  dotProp.delete(config, key);\n  this.all = config;\n};\n\nConfigstore.prototype.clear = function () {\n  this.all = {};\n};\n\nmodule.exports = Configstore;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/google-translate-token/node_modules/configstore/index.js"],"names":["path","require","fs","osenv","assign","mkdirp","uuid","xdgBasedir","osTmpdir","writeFileAtomic","dotProp","user","v4","replace","configDir","config","join","permissionError","defaultPathMode","parseInt","writeFileOptions","mode","Configstore","id","defaults","opts","pathPrefix","globalConfigPath","all","prototype","Object","create","get","JSON","parse","readFileSync","err","code","sync","dirname","message","name","set","val","stringify","size","keys","length","key","arguments","forEach","k","has","delete","del","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nvar path = require('path');\nvar fs = require('graceful-fs');\nvar osenv = require('osenv');\nvar assign = require('object-assign');\nvar mkdirp = require('mkdirp');\nvar uuid = require('uuid');\nvar xdgBasedir = require('xdg-basedir');\nvar osTmpdir = require('os-tmpdir');\nvar writeFileAtomic = require('write-file-atomic');\nvar dotProp = require('dot-prop');\n\nvar user = (osenv.user() || uuid.v4()).replace(/\\\\/g, '');\nvar configDir = xdgBasedir.config || path.join(osTmpdir(), user, '.config');\nvar permissionError = 'You don\\'t have access to this file.';\nvar defaultPathMode = parseInt('0700', 8);\nvar writeFileOptions = {mode: parseInt('0600', 8)};\n\nfunction Configstore(id, defaults, opts) {\n\topts = opts || {};\n\n\tvar pathPrefix = opts.globalConfigPath ?\n\t\tpath.join(id, 'config.json') :\n\t\tpath.join('configstore', id + '.json');\n\n\tthis.path = path.join(configDir, pathPrefix);\n\n\tthis.all = assign({}, defaults || {}, this.all || {});\n}\n\nConfigstore.prototype = Object.create(Object.prototype, {\n\tall: {\n\t\tget: function () {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(fs.readFileSync(this.path, 'utf8'));\n\t\t\t} catch (err) {\n\t\t\t\t// create dir if it doesn't exist\n\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\tmkdirp.sync(path.dirname(this.path), defaultPathMode);\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\t// improve the message of permission errors\n\t\t\t\tif (err.code === 'EACCES') {\n\t\t\t\t\terr.message = err.message + '\\n' + permissionError + '\\n';\n\t\t\t\t}\n\n\t\t\t\t// empty the file if it encounters invalid JSON\n\t\t\t\tif (err.name === 'SyntaxError') {\n\t\t\t\t\twriteFileAtomic.sync(this.path, '', writeFileOptions);\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t},\n\t\tset: function (val) {\n\t\t\ttry {\n\t\t\t\t// make sure the folder exists as it\n\t\t\t\t// could have been deleted in the meantime\n\t\t\t\tmkdirp.sync(path.dirname(this.path), defaultPathMode);\n\n\t\t\t\twriteFileAtomic.sync(this.path, JSON.stringify(val, null, '\\t'), writeFileOptions);\n\t\t\t} catch (err) {\n\t\t\t\t// improve the message of permission errors\n\t\t\t\tif (err.code === 'EACCES') {\n\t\t\t\t\terr.message = err.message + '\\n' + permissionError + '\\n';\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t},\n\tsize: {\n\t\tget: function () {\n\t\t\treturn Object.keys(this.all || {}).length;\n\t\t}\n\t}\n});\n\nConfigstore.prototype.get = function (key) {\n\treturn dotProp.get(this.all, key);\n};\n\nConfigstore.prototype.set = function (key, val) {\n\tvar config = this.all;\n\tif (arguments.length === 1) {\n\t\tObject.keys(key).forEach(function (k) {\n\t\t\tdotProp.set(config, k, key[k]);\n\t\t});\n\t} else {\n\t\tdotProp.set(config, key, val);\n\t}\n\tthis.all = config;\n};\n\nConfigstore.prototype.has = function (key) {\n\treturn dotProp.has(this.all, key);\n};\n\nConfigstore.prototype.delete = Configstore.prototype.del = function (key) {\n\tvar config = this.all;\n\tdotProp.delete(config, key);\n\tthis.all = config;\n};\n\nConfigstore.prototype.clear = function () {\n\tthis.all = {};\n};\n\nmodule.exports = Configstore;\n"]},"metadata":{},"sourceType":"script"}