{"ast":null,"code":"var querystring = require('querystring');\n\nvar got = require('got');\n\nvar token = require('@vitalets/google-translate-token');\n\nvar languages = require('./languages');\n\nfunction translate(text, opts, gotopts) {\n  opts = opts || {};\n  gotopts = gotopts || {};\n  var e;\n  [opts.from, opts.to].forEach(function (lang) {\n    if (lang && !languages.isSupported(lang)) {\n      e = new Error();\n      e.code = 400;\n      e.message = 'The language \\'' + lang + '\\' is not supported';\n    }\n  });\n\n  if (e) {\n    return new Promise(function (resolve, reject) {\n      reject(e);\n    });\n  }\n\n  opts.from = opts.from || 'auto';\n  opts.to = opts.to || 'en';\n  opts.tld = opts.tld || 'com';\n  opts.from = languages.getCode(opts.from);\n  opts.to = languages.getCode(opts.to);\n  return token.get(text, {\n    tld: opts.tld\n  }).then(function (token) {\n    var url = 'https://translate.google.' + opts.tld + '/translate_a/single';\n    var data = {\n      client: opts.client || 't',\n      sl: opts.from,\n      tl: opts.to,\n      hl: opts.to,\n      dt: ['at', 'bd', 'ex', 'ld', 'md', 'qca', 'rw', 'rm', 'ss', 't'],\n      ie: 'UTF-8',\n      oe: 'UTF-8',\n      otf: 1,\n      ssel: 0,\n      tsel: 0,\n      kc: 7,\n      q: text\n    };\n    data[token.name] = token.value;\n    return url + '?' + querystring.stringify(data);\n  }).then(function (url) {\n    return got(url, gotopts).then(function (res) {\n      var result = {\n        text: '',\n        pronunciation: '',\n        from: {\n          language: {\n            didYouMean: false,\n            iso: ''\n          },\n          text: {\n            autoCorrected: false,\n            value: '',\n            didYouMean: false\n          }\n        },\n        raw: ''\n      };\n\n      if (opts.raw) {\n        result.raw = res.body;\n      }\n\n      var body = JSON.parse(res.body);\n      body[0].forEach(function (obj) {\n        if (obj[0]) {\n          result.text += obj[0];\n        }\n\n        if (obj[2]) {\n          result.pronunciation += obj[2];\n        }\n      });\n\n      if (body[2] === body[8][0][0]) {\n        result.from.language.iso = body[2];\n      } else {\n        result.from.language.didYouMean = true;\n        result.from.language.iso = body[8][0][0];\n      }\n\n      if (body[7] && body[7][0]) {\n        var str = body[7][0];\n        str = str.replace(/<b><i>/g, '[');\n        str = str.replace(/<\\/i><\\/b>/g, ']');\n        result.from.text.value = str;\n\n        if (body[7][5] === true) {\n          result.from.text.autoCorrected = true;\n        } else {\n          result.from.text.didYouMean = true;\n        }\n      }\n\n      return result;\n    }).catch(function (err) {\n      err.message += \"\\nUrl: \".concat(url);\n\n      if (err.statusCode !== undefined && err.statusCode !== 200) {\n        err.code = 'BAD_REQUEST';\n      } else {\n        err.code = 'BAD_NETWORK';\n      }\n\n      throw err;\n    });\n  });\n}\n\nmodule.exports = translate;\nmodule.exports.languages = languages;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/@vitalets/google-translate-api/index.js"],"names":["querystring","require","got","token","languages","translate","text","opts","gotopts","e","from","to","forEach","lang","isSupported","Error","code","message","Promise","resolve","reject","tld","getCode","get","then","url","data","client","sl","tl","hl","dt","ie","oe","otf","ssel","tsel","kc","q","name","value","stringify","res","result","pronunciation","language","didYouMean","iso","autoCorrected","raw","body","JSON","parse","obj","str","replace","catch","err","statusCode","undefined","module","exports"],"mappings":"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","sourcesContent":["var querystring = require('querystring');\n\nvar got = require('got');\nvar token = require('@vitalets/google-translate-token');\n\nvar languages = require('./languages');\n\nfunction translate(text, opts, gotopts) {\n    opts = opts || {};\n    gotopts = gotopts || {};\n    var e;\n    [opts.from, opts.to].forEach(function (lang) {\n        if (lang && !languages.isSupported(lang)) {\n            e = new Error();\n            e.code = 400;\n            e.message = 'The language \\'' + lang + '\\' is not supported';\n        }\n    });\n    if (e) {\n        return new Promise(function (resolve, reject) {\n            reject(e);\n        });\n    }\n\n    opts.from = opts.from || 'auto';\n    opts.to = opts.to || 'en';\n    opts.tld = opts.tld || 'com';\n\n    opts.from = languages.getCode(opts.from);\n    opts.to = languages.getCode(opts.to);\n\n    return token.get(text, {tld: opts.tld}).then(function (token) {\n        var url = 'https://translate.google.' + opts.tld + '/translate_a/single';\n        var data = {\n            client: opts.client || 't',\n            sl: opts.from,\n            tl: opts.to,\n            hl: opts.to,\n            dt: ['at', 'bd', 'ex', 'ld', 'md', 'qca', 'rw', 'rm', 'ss', 't'],\n            ie: 'UTF-8',\n            oe: 'UTF-8',\n            otf: 1,\n            ssel: 0,\n            tsel: 0,\n            kc: 7,\n            q: text\n        };\n        data[token.name] = token.value;\n\n        return url + '?' + querystring.stringify(data);\n    }).then(function (url) {\n        return got(url, gotopts).then(function (res) {\n            var result = {\n                text: '',\n                pronunciation: '',\n                from: {\n                    language: {\n                        didYouMean: false,\n                        iso: ''\n                    },\n                    text: {\n                        autoCorrected: false,\n                        value: '',\n                        didYouMean: false\n                    }\n                },\n                raw: ''\n            };\n\n            if (opts.raw) {\n                result.raw = res.body;\n            }\n\n            var body = JSON.parse(res.body);\n            body[0].forEach(function (obj) {\n                if (obj[0]) {\n                    result.text += obj[0];\n                }\n                if (obj[2]) {\n                    result.pronunciation += obj[2];\n                }\n            });\n\n            if (body[2] === body[8][0][0]) {\n                result.from.language.iso = body[2];\n            } else {\n                result.from.language.didYouMean = true;\n                result.from.language.iso = body[8][0][0];\n            }\n\n            if (body[7] && body[7][0]) {\n                var str = body[7][0];\n\n                str = str.replace(/<b><i>/g, '[');\n                str = str.replace(/<\\/i><\\/b>/g, ']');\n\n                result.from.text.value = str;\n\n                if (body[7][5] === true) {\n                    result.from.text.autoCorrected = true;\n                } else {\n                    result.from.text.didYouMean = true;\n                }\n            }\n\n            return result;\n        }).catch(function (err) {\n            err.message += `\\nUrl: ${url}`;\n            if (err.statusCode !== undefined && err.statusCode !== 200) {\n                err.code = 'BAD_REQUEST';\n            } else {\n                err.code = 'BAD_NETWORK';\n            }\n            throw err;\n        });\n    });\n}\n\nmodule.exports = translate;\nmodule.exports.languages = languages;\n"]},"metadata":{},"sourceType":"script"}