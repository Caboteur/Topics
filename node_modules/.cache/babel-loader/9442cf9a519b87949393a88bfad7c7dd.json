{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar PassThrough = require('stream').PassThrough;\n\nvar urlLib = require('url');\n\nvar querystring = require('querystring');\n\nvar duplexer3 = require('duplexer3');\n\nvar isStream = require('is-stream');\n\nvar getStream = require('get-stream');\n\nvar timedOut = require('timed-out');\n\nvar urlParseLax = require('url-parse-lax');\n\nvar lowercaseKeys = require('lowercase-keys');\n\nvar isRedirect = require('is-redirect');\n\nvar unzipResponse = require('unzip-response');\n\nvar createErrorClass = require('create-error-class');\n\nvar isRetryAllowed = require('is-retry-allowed');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar pkg = require('./package');\n\nfunction requestAsEventEmitter(opts) {\n  opts = opts || {};\n  var ee = new EventEmitter();\n  var requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n  var redirectCount = 0;\n  var retryCount = 0;\n  var redirectUrl;\n\n  var get = function get(opts) {\n    var fn = opts.protocol === 'https:' ? https : http;\n    var req = fn.request(opts, function (res) {\n      var statusCode = res.statusCode;\n\n      if (isRedirect(statusCode) && opts.followRedirect && 'location' in res.headers && (opts.method === 'GET' || opts.method === 'HEAD')) {\n        res.resume();\n\n        if (++redirectCount > 10) {\n          ee.emit('error', new got.MaxRedirectsError(statusCode, opts), null, res);\n          return;\n        }\n\n        var bufferString = Buffer.from(res.headers.location, 'binary').toString();\n        redirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n        var redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n        ee.emit('redirect', res, redirectOpts);\n        get(redirectOpts);\n        return;\n      }\n\n      setImmediate(function () {\n        var response = typeof unzipResponse === 'function' && req.method !== 'HEAD' ? unzipResponse(res) : res;\n        response.url = redirectUrl || requestUrl;\n        response.requestUrl = requestUrl;\n        ee.emit('response', response);\n      });\n    });\n    req.once('error', function (err) {\n      var backoff = opts.retries(++retryCount, err);\n\n      if (backoff) {\n        setTimeout(get, backoff, opts);\n        return;\n      }\n\n      ee.emit('error', new got.RequestError(err, opts));\n    });\n\n    if (opts.gotTimeout) {\n      timedOut(req, opts.gotTimeout);\n    }\n\n    setImmediate(function () {\n      ee.emit('request', req);\n    });\n  };\n\n  get(opts);\n  return ee;\n}\n\nfunction asPromise(opts) {\n  return new Promise(function (resolve, reject) {\n    var ee = requestAsEventEmitter(opts);\n    ee.on('request', function (req) {\n      if (isStream(opts.body)) {\n        opts.body.pipe(req);\n        opts.body = undefined;\n        return;\n      }\n\n      req.end(opts.body);\n    });\n    ee.on('response', function (res) {\n      var stream = opts.encoding === null ? getStream.buffer(res) : getStream(res, opts);\n      stream.catch(function (err) {\n        return reject(new got.ReadError(err, opts));\n      }).then(function (data) {\n        var statusCode = res.statusCode;\n        var limitStatusCode = opts.followRedirect ? 299 : 399;\n        res.body = data;\n\n        if (opts.json && res.body) {\n          try {\n            res.body = JSON.parse(res.body);\n          } catch (e) {\n            throw new got.ParseError(e, statusCode, opts, data);\n          }\n        }\n\n        if (statusCode < 200 || statusCode > limitStatusCode) {\n          throw new got.HTTPError(statusCode, opts);\n        }\n\n        resolve(res);\n      }).catch(function (err) {\n        Object.defineProperty(err, 'response', {\n          value: res\n        });\n        reject(err);\n      });\n    });\n    ee.on('error', reject);\n  });\n}\n\nfunction asStream(opts) {\n  var input = new PassThrough();\n  var output = new PassThrough();\n  var proxy = duplexer3(input, output);\n\n  if (opts.json) {\n    throw new Error('got can not be used as stream when options.json is used');\n  }\n\n  if (opts.body) {\n    proxy.write = function () {\n      throw new Error('got\\'s stream is not writable when options.body is used');\n    };\n  }\n\n  var ee = requestAsEventEmitter(opts);\n  ee.on('request', function (req) {\n    proxy.emit('request', req);\n\n    if (isStream(opts.body)) {\n      opts.body.pipe(req);\n      return;\n    }\n\n    if (opts.body) {\n      req.end(opts.body);\n      return;\n    }\n\n    if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n      input.pipe(req);\n      return;\n    }\n\n    req.end();\n  });\n  ee.on('response', function (res) {\n    var statusCode = res.statusCode;\n    res.pipe(output);\n\n    if (statusCode < 200 || statusCode > 299) {\n      proxy.emit('error', new got.HTTPError(statusCode, opts), null, res);\n      return;\n    }\n\n    proxy.emit('response', res);\n  });\n  ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n  ee.on('error', proxy.emit.bind(proxy, 'error'));\n  return proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n  if (typeof url !== 'string' && typeof url !== 'object') {\n    throw new Error(\"Parameter `url` must be a string or object, not \".concat(typeof url));\n  }\n\n  if (typeof url === 'string') {\n    url = url.replace(/^unix:/, 'http://$&');\n    url = urlParseLax(url);\n\n    if (url.auth) {\n      throw new Error('Basic authentication must be done with auth option');\n    }\n  }\n\n  opts = Object.assign({\n    protocol: 'http:',\n    path: '',\n    retries: 5\n  }, url, opts);\n  opts.headers = Object.assign({\n    'user-agent': \"\".concat(pkg.name, \"/\").concat(pkg.version, \" (https://github.com/sindresorhus/got)\"),\n    'accept-encoding': 'gzip,deflate'\n  }, lowercaseKeys(opts.headers));\n  var query = opts.query;\n\n  if (query) {\n    if (typeof query !== 'string') {\n      opts.query = querystring.stringify(query);\n    }\n\n    opts.path = \"\".concat(opts.path.split('?')[0], \"?\").concat(opts.query);\n    delete opts.query;\n  }\n\n  if (opts.json && opts.headers.accept === undefined) {\n    opts.headers.accept = 'application/json';\n  }\n\n  var body = opts.body;\n\n  if (body) {\n    if (typeof body !== 'string' && !(body !== null && typeof body === 'object')) {\n      throw new Error('options.body must be a ReadableStream, string, Buffer or plain Object');\n    }\n\n    opts.method = opts.method || 'POST';\n\n    if (isStream(body) && typeof body.getBoundary === 'function') {\n      // Special case for https://github.com/form-data/form-data\n      opts.headers['content-type'] = opts.headers['content-type'] || \"multipart/form-data; boundary=\".concat(body.getBoundary());\n    } else if (body !== null && typeof body === 'object' && !Buffer.isBuffer(body) && !isStream(body)) {\n      opts.headers['content-type'] = opts.headers['content-type'] || 'application/x-www-form-urlencoded';\n      body = opts.body = querystring.stringify(body);\n    }\n\n    if (opts.headers['content-length'] === undefined && opts.headers['transfer-encoding'] === undefined && !isStream(body)) {\n      var length = typeof body === 'string' ? Buffer.byteLength(body) : body.length;\n      opts.headers['content-length'] = length;\n    }\n  }\n\n  opts.method = (opts.method || 'GET').toUpperCase();\n\n  if (opts.hostname === 'unix') {\n    var matches = /(.+):(.+)/.exec(opts.path);\n\n    if (matches) {\n      opts.socketPath = matches[1];\n      opts.path = matches[2];\n      opts.host = null;\n    }\n  }\n\n  if (typeof opts.retries !== 'function') {\n    var retries = opts.retries;\n\n    opts.retries = function (iter, err) {\n      if (iter > retries || !isRetryAllowed(err)) {\n        return 0;\n      }\n\n      var noise = Math.random() * 100;\n      return (1 << iter) * 1000 + noise;\n    };\n  }\n\n  if (opts.followRedirect === undefined) {\n    opts.followRedirect = true;\n  }\n\n  if (opts.timeout) {\n    opts.gotTimeout = opts.timeout;\n    delete opts.timeout;\n  }\n\n  return opts;\n}\n\nfunction got(url, opts) {\n  try {\n    return asPromise(normalizeArguments(url, opts));\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nvar helpers = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nhelpers.forEach(function (el) {\n  got[el] = function (url, opts) {\n    return got(url, Object.assign({}, opts, {\n      method: el\n    }));\n  };\n});\n\ngot.stream = function (url, opts) {\n  return asStream(normalizeArguments(url, opts));\n};\n\nvar _loop = function _loop() {\n  var el = _helpers[_i];\n\n  got.stream[el] = function (url, opts) {\n    return got.stream(url, Object.assign({}, opts, {\n      method: el\n    }));\n  };\n};\n\nfor (var _i = 0, _helpers = helpers; _i < _helpers.length; _i++) {\n  _loop();\n}\n\nfunction stdError(error, opts) {\n  if (error.code !== undefined) {\n    this.code = error.code;\n  }\n\n  Object.assign(this, {\n    message: error.message,\n    host: opts.host,\n    hostname: opts.hostname,\n    method: opts.method,\n    path: opts.path\n  });\n}\n\ngot.RequestError = createErrorClass('RequestError', stdError);\ngot.ReadError = createErrorClass('ReadError', stdError);\ngot.ParseError = createErrorClass('ParseError', function (e, statusCode, opts, data) {\n  stdError.call(this, e, opts);\n  this.statusCode = statusCode;\n  this.statusMessage = http.STATUS_CODES[this.statusCode];\n  this.message = \"\".concat(e.message, \" in \\\"\").concat(urlLib.format(opts), \"\\\": \\n\").concat(data.slice(0, 77), \"...\");\n});\ngot.HTTPError = createErrorClass('HTTPError', function (statusCode, opts) {\n  stdError.call(this, {}, opts);\n  this.statusCode = statusCode;\n  this.statusMessage = http.STATUS_CODES[this.statusCode];\n  this.message = \"Response code \".concat(this.statusCode, \" (\").concat(this.statusMessage, \")\");\n});\ngot.MaxRedirectsError = createErrorClass('MaxRedirectsError', function (statusCode, opts) {\n  stdError.call(this, {}, opts);\n  this.statusCode = statusCode;\n  this.statusMessage = http.STATUS_CODES[this.statusCode];\n  this.message = 'Redirected 10 times. Aborting.';\n});\nmodule.exports = got;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/got/index.js"],"names":["EventEmitter","require","http","https","PassThrough","urlLib","querystring","duplexer3","isStream","getStream","timedOut","urlParseLax","lowercaseKeys","isRedirect","unzipResponse","createErrorClass","isRetryAllowed","Buffer","pkg","requestAsEventEmitter","opts","ee","requestUrl","href","resolve","format","path","redirectCount","retryCount","redirectUrl","get","fn","protocol","req","request","res","statusCode","followRedirect","headers","method","resume","emit","got","MaxRedirectsError","bufferString","from","location","toString","redirectOpts","Object","assign","parse","setImmediate","response","url","once","err","backoff","retries","setTimeout","RequestError","gotTimeout","asPromise","Promise","reject","on","body","pipe","undefined","end","stream","encoding","buffer","catch","ReadError","then","data","limitStatusCode","json","JSON","e","ParseError","HTTPError","defineProperty","value","asStream","input","output","proxy","Error","write","bind","normalizeArguments","replace","auth","name","version","query","stringify","split","accept","getBoundary","isBuffer","length","byteLength","toUpperCase","hostname","matches","exec","socketPath","host","iter","noise","Math","random","timeout","helpers","forEach","el","stdError","error","code","message","call","statusMessage","STATUS_CODES","slice","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst PassThrough = require('stream').PassThrough;\nconst urlLib = require('url');\nconst querystring = require('querystring');\nconst duplexer3 = require('duplexer3');\nconst isStream = require('is-stream');\nconst getStream = require('get-stream');\nconst timedOut = require('timed-out');\nconst urlParseLax = require('url-parse-lax');\nconst lowercaseKeys = require('lowercase-keys');\nconst isRedirect = require('is-redirect');\nconst unzipResponse = require('unzip-response');\nconst createErrorClass = require('create-error-class');\nconst isRetryAllowed = require('is-retry-allowed');\nconst Buffer = require('safe-buffer').Buffer;\nconst pkg = require('./package');\n\nfunction requestAsEventEmitter(opts) {\n\topts = opts || {};\n\n\tconst ee = new EventEmitter();\n\tconst requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n\tlet redirectCount = 0;\n\tlet retryCount = 0;\n\tlet redirectUrl;\n\n\tconst get = opts => {\n\t\tconst fn = opts.protocol === 'https:' ? https : http;\n\n\t\tconst req = fn.request(opts, res => {\n\t\t\tconst statusCode = res.statusCode;\n\n\t\t\tif (isRedirect(statusCode) && opts.followRedirect && 'location' in res.headers && (opts.method === 'GET' || opts.method === 'HEAD')) {\n\t\t\t\tres.resume();\n\n\t\t\t\tif (++redirectCount > 10) {\n\t\t\t\t\tee.emit('error', new got.MaxRedirectsError(statusCode, opts), null, res);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst bufferString = Buffer.from(res.headers.location, 'binary').toString();\n\n\t\t\t\tredirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n\t\t\t\tconst redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n\n\t\t\t\tee.emit('redirect', res, redirectOpts);\n\n\t\t\t\tget(redirectOpts);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetImmediate(() => {\n\t\t\t\tconst response = typeof unzipResponse === 'function' && req.method !== 'HEAD' ? unzipResponse(res) : res;\n\t\t\t\tresponse.url = redirectUrl || requestUrl;\n\t\t\t\tresponse.requestUrl = requestUrl;\n\n\t\t\t\tee.emit('response', response);\n\t\t\t});\n\t\t});\n\n\t\treq.once('error', err => {\n\t\t\tconst backoff = opts.retries(++retryCount, err);\n\n\t\t\tif (backoff) {\n\t\t\t\tsetTimeout(get, backoff, opts);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tee.emit('error', new got.RequestError(err, opts));\n\t\t});\n\n\t\tif (opts.gotTimeout) {\n\t\t\ttimedOut(req, opts.gotTimeout);\n\t\t}\n\n\t\tsetImmediate(() => {\n\t\t\tee.emit('request', req);\n\t\t});\n\t};\n\n\tget(opts);\n\treturn ee;\n}\n\nfunction asPromise(opts) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ee = requestAsEventEmitter(opts);\n\n\t\tee.on('request', req => {\n\t\t\tif (isStream(opts.body)) {\n\t\t\t\topts.body.pipe(req);\n\t\t\t\topts.body = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treq.end(opts.body);\n\t\t});\n\n\t\tee.on('response', res => {\n\t\t\tconst stream = opts.encoding === null ? getStream.buffer(res) : getStream(res, opts);\n\n\t\t\tstream\n\t\t\t\t.catch(err => reject(new got.ReadError(err, opts)))\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\t\tconst limitStatusCode = opts.followRedirect ? 299 : 399;\n\n\t\t\t\t\tres.body = data;\n\n\t\t\t\t\tif (opts.json && res.body) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres.body = JSON.parse(res.body);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new got.ParseError(e, statusCode, opts, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (statusCode < 200 || statusCode > limitStatusCode) {\n\t\t\t\t\t\tthrow new got.HTTPError(statusCode, opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tObject.defineProperty(err, 'response', {value: res});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\n\t\tee.on('error', reject);\n\t});\n}\n\nfunction asStream(opts) {\n\tconst input = new PassThrough();\n\tconst output = new PassThrough();\n\tconst proxy = duplexer3(input, output);\n\n\tif (opts.json) {\n\t\tthrow new Error('got can not be used as stream when options.json is used');\n\t}\n\n\tif (opts.body) {\n\t\tproxy.write = () => {\n\t\t\tthrow new Error('got\\'s stream is not writable when options.body is used');\n\t\t};\n\t}\n\n\tconst ee = requestAsEventEmitter(opts);\n\n\tee.on('request', req => {\n\t\tproxy.emit('request', req);\n\n\t\tif (isStream(opts.body)) {\n\t\t\topts.body.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.body) {\n\t\t\treq.end(opts.body);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\t\tinput.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\treq.end();\n\t});\n\n\tee.on('response', res => {\n\t\tconst statusCode = res.statusCode;\n\n\t\tres.pipe(output);\n\n\t\tif (statusCode < 200 || statusCode > 299) {\n\t\t\tproxy.emit('error', new got.HTTPError(statusCode, opts), null, res);\n\t\t\treturn;\n\t\t}\n\n\t\tproxy.emit('response', res);\n\t});\n\n\tee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n\tee.on('error', proxy.emit.bind(proxy, 'error'));\n\n\treturn proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n\tif (typeof url !== 'string' && typeof url !== 'object') {\n\t\tthrow new Error(`Parameter \\`url\\` must be a string or object, not ${typeof url}`);\n\t}\n\n\tif (typeof url === 'string') {\n\t\turl = url.replace(/^unix:/, 'http://$&');\n\t\turl = urlParseLax(url);\n\n\t\tif (url.auth) {\n\t\t\tthrow new Error('Basic authentication must be done with auth option');\n\t\t}\n\t}\n\n\topts = Object.assign(\n\t\t{\n\t\t\tprotocol: 'http:',\n\t\t\tpath: '',\n\t\t\tretries: 5\n\t\t},\n\t\turl,\n\t\topts\n\t);\n\n\topts.headers = Object.assign({\n\t\t'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`,\n\t\t'accept-encoding': 'gzip,deflate'\n\t}, lowercaseKeys(opts.headers));\n\n\tconst query = opts.query;\n\n\tif (query) {\n\t\tif (typeof query !== 'string') {\n\t\t\topts.query = querystring.stringify(query);\n\t\t}\n\n\t\topts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n\t\tdelete opts.query;\n\t}\n\n\tif (opts.json && opts.headers.accept === undefined) {\n\t\topts.headers.accept = 'application/json';\n\t}\n\n\tlet body = opts.body;\n\n\tif (body) {\n\t\tif (typeof body !== 'string' && !(body !== null && typeof body === 'object')) {\n\t\t\tthrow new Error('options.body must be a ReadableStream, string, Buffer or plain Object');\n\t\t}\n\n\t\topts.method = opts.method || 'POST';\n\n\t\tif (isStream(body) && typeof body.getBoundary === 'function') {\n\t\t\t// Special case for https://github.com/form-data/form-data\n\t\t\topts.headers['content-type'] = opts.headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t} else if (body !== null && typeof body === 'object' && !Buffer.isBuffer(body) && !isStream(body)) {\n\t\t\topts.headers['content-type'] = opts.headers['content-type'] || 'application/x-www-form-urlencoded';\n\t\t\tbody = opts.body = querystring.stringify(body);\n\t\t}\n\n\t\tif (opts.headers['content-length'] === undefined && opts.headers['transfer-encoding'] === undefined && !isStream(body)) {\n\t\t\tconst length = typeof body === 'string' ? Buffer.byteLength(body) : body.length;\n\t\t\topts.headers['content-length'] = length;\n\t\t}\n\t}\n\n\topts.method = (opts.method || 'GET').toUpperCase();\n\n\tif (opts.hostname === 'unix') {\n\t\tconst matches = /(.+):(.+)/.exec(opts.path);\n\n\t\tif (matches) {\n\t\t\topts.socketPath = matches[1];\n\t\t\topts.path = matches[2];\n\t\t\topts.host = null;\n\t\t}\n\t}\n\n\tif (typeof opts.retries !== 'function') {\n\t\tconst retries = opts.retries;\n\n\t\topts.retries = (iter, err) => {\n\t\t\tif (iter > retries || !isRetryAllowed(err)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst noise = Math.random() * 100;\n\n\t\t\treturn ((1 << iter) * 1000) + noise;\n\t\t};\n\t}\n\n\tif (opts.followRedirect === undefined) {\n\t\topts.followRedirect = true;\n\t}\n\n\tif (opts.timeout) {\n\t\topts.gotTimeout = opts.timeout;\n\t\tdelete opts.timeout;\n\t}\n\n\treturn opts;\n}\n\nfunction got(url, opts) {\n\ttry {\n\t\treturn asPromise(normalizeArguments(url, opts));\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n}\n\nconst helpers = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nhelpers.forEach(el => {\n\tgot[el] = (url, opts) => got(url, Object.assign({}, opts, {method: el}));\n});\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nfor (const el of helpers) {\n\tgot.stream[el] = (url, opts) => got.stream(url, Object.assign({}, opts, {method: el}));\n}\n\nfunction stdError(error, opts) {\n\tif (error.code !== undefined) {\n\t\tthis.code = error.code;\n\t}\n\n\tObject.assign(this, {\n\t\tmessage: error.message,\n\t\thost: opts.host,\n\t\thostname: opts.hostname,\n\t\tmethod: opts.method,\n\t\tpath: opts.path\n\t});\n}\n\ngot.RequestError = createErrorClass('RequestError', stdError);\ngot.ReadError = createErrorClass('ReadError', stdError);\ngot.ParseError = createErrorClass('ParseError', function (e, statusCode, opts, data) {\n\tstdError.call(this, e, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = `${e.message} in \"${urlLib.format(opts)}\": \\n${data.slice(0, 77)}...`;\n});\n\ngot.HTTPError = createErrorClass('HTTPError', function (statusCode, opts) {\n\tstdError.call(this, {}, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = `Response code ${this.statusCode} (${this.statusMessage})`;\n});\n\ngot.MaxRedirectsError = createErrorClass('MaxRedirectsError', function (statusCode, opts) {\n\tstdError.call(this, {}, opts);\n\tthis.statusCode = statusCode;\n\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\tthis.message = 'Redirected 10 times. Aborting.';\n});\n\nmodule.exports = got;\n"]},"metadata":{},"sourceType":"script"}