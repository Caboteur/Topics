{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _objectSpread = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _require = require('url'),\n    URL = _require.URL,\n    URLSearchParams = _require.URLSearchParams; // TODO: Use the `URL` global when targeting Node.js 10\n\n\nvar urlLib = require('url');\n\nvar is = require('@sindresorhus/is');\n\nvar urlParseLax = require('url-parse-lax');\n\nvar lowercaseKeys = require('lowercase-keys');\n\nvar urlToOptions = require('./utils/url-to-options');\n\nvar isFormData = require('./utils/is-form-data');\n\nvar merge = require('./merge');\n\nvar knownHookEvents = require('./known-hook-events');\n\nvar retryAfterStatusCodes = new Set([413, 429, 503]); // `preNormalize` handles static options (e.g. headers).\n// For example, when you create a custom instance and make a request\n// with no static changes, they won't be normalized again.\n//\n// `normalize` operates on dynamic options - they cannot be saved.\n// For example, `body` is everytime different per request.\n// When it's done normalizing the new options, it performs merge()\n// on the prenormalized options and the normalized ones.\n\nvar preNormalize = function preNormalize(options, defaults) {\n  if (is.nullOrUndefined(options.headers)) {\n    options.headers = {};\n  } else {\n    options.headers = lowercaseKeys(options.headers);\n  }\n\n  if (options.baseUrl && !options.baseUrl.toString().endsWith('/')) {\n    options.baseUrl += '/';\n  }\n\n  if (options.stream) {\n    options.json = false;\n  }\n\n  if (is.nullOrUndefined(options.hooks)) {\n    options.hooks = {};\n  } else if (!is.object(options.hooks)) {\n    throw new TypeError(\"Parameter `hooks` must be an object, not \".concat(is(options.hooks)));\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = knownHookEvents[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var event = _step.value;\n\n      if (is.nullOrUndefined(options.hooks[event])) {\n        if (defaults) {\n          options.hooks[event] = _toConsumableArray(defaults.hooks[event]);\n        } else {\n          options.hooks[event] = [];\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (is.number(options.timeout)) {\n    options.gotTimeout = {\n      request: options.timeout\n    };\n  } else if (is.object(options.timeout)) {\n    options.gotTimeout = options.timeout;\n  }\n\n  delete options.timeout;\n  var retry = options.retry;\n  options.retry = {\n    retries: 0,\n    methods: [],\n    statusCodes: [],\n    errorCodes: []\n  };\n\n  if (is.nonEmptyObject(defaults) && retry !== false) {\n    options.retry = _objectSpread({}, defaults.retry);\n  }\n\n  if (retry !== false) {\n    if (is.number(retry)) {\n      options.retry.retries = retry;\n    } else {\n      options.retry = _objectSpread({}, options.retry, {}, retry);\n    }\n  }\n\n  if (options.gotTimeout) {\n    options.retry.maxRetryAfter = Math.min.apply(Math, _toConsumableArray([options.gotTimeout.request, options.gotTimeout.connection].filter(function (n) {\n      return !is.nullOrUndefined(n);\n    })));\n  }\n\n  if (is.array(options.retry.methods)) {\n    options.retry.methods = new Set(options.retry.methods.map(function (method) {\n      return method.toUpperCase();\n    }));\n  }\n\n  if (is.array(options.retry.statusCodes)) {\n    options.retry.statusCodes = new Set(options.retry.statusCodes);\n  }\n\n  if (is.array(options.retry.errorCodes)) {\n    options.retry.errorCodes = new Set(options.retry.errorCodes);\n  }\n\n  return options;\n};\n\nvar normalize = function normalize(url, options, defaults) {\n  if (is.plainObject(url)) {\n    options = _objectSpread({}, url, {}, options);\n    url = options.url || {};\n    delete options.url;\n  }\n\n  if (defaults) {\n    options = merge({}, defaults.options, options ? preNormalize(options, defaults.options) : {});\n  } else {\n    options = merge({}, preNormalize(options));\n  }\n\n  if (!is.string(url) && !is.object(url)) {\n    throw new TypeError(\"Parameter `url` must be a string or object, not \".concat(is(url)));\n  }\n\n  if (is.string(url)) {\n    if (options.baseUrl) {\n      if (url.toString().startsWith('/')) {\n        url = url.toString().slice(1);\n      }\n\n      url = urlToOptions(new URL(url, options.baseUrl));\n    } else {\n      url = url.replace(/^unix:/, 'http://$&');\n      url = urlParseLax(url);\n    }\n  } else if (is(url) === 'URL') {\n    url = urlToOptions(url);\n  } // Override both null/undefined with default protocol\n\n\n  options = merge({\n    path: ''\n  }, url, {\n    protocol: url.protocol || 'https:'\n  }, options);\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = options.hooks.init[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var hook = _step2.value;\n      var called = hook(options);\n\n      if (is.promise(called)) {\n        throw new TypeError('The `init` hook must be a synchronous function');\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var _options = options,\n      baseUrl = _options.baseUrl;\n  Object.defineProperty(options, 'baseUrl', {\n    set: function set() {\n      throw new Error('Failed to set baseUrl. Options are normalized already.');\n    },\n    get: function get() {\n      return baseUrl;\n    }\n  });\n  var _options2 = options,\n      query = _options2.query;\n\n  if (is.nonEmptyString(query) || is.nonEmptyObject(query) || query instanceof URLSearchParams) {\n    if (!is.string(query)) {\n      options.query = new URLSearchParams(query).toString();\n    }\n\n    options.path = \"\".concat(options.path.split('?')[0], \"?\").concat(options.query);\n    delete options.query;\n  }\n\n  if (options.hostname === 'unix') {\n    var matches = /(.+?):(.+)/.exec(options.path);\n\n    if (matches) {\n      var _matches = _slicedToArray(matches, 3),\n          socketPath = _matches[1],\n          path = _matches[2];\n\n      options = _objectSpread({}, options, {\n        socketPath: socketPath,\n        path: path,\n        host: null\n      });\n    }\n  }\n\n  var _options3 = options,\n      headers = _options3.headers;\n\n  for (var _i = 0, _Object$entries = Object.entries(headers); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (is.nullOrUndefined(value)) {\n      delete headers[key];\n    }\n  }\n\n  if (options.json && is.undefined(headers.accept)) {\n    headers.accept = 'application/json';\n  }\n\n  if (options.decompress && is.undefined(headers['accept-encoding'])) {\n    headers['accept-encoding'] = 'gzip, deflate';\n  }\n\n  var _options4 = options,\n      body = _options4.body;\n\n  if (is.nullOrUndefined(body)) {\n    options.method = options.method ? options.method.toUpperCase() : 'GET';\n  } else {\n    var isObject = is.object(body) && !is.buffer(body) && !is.nodeStream(body);\n\n    if (!is.nodeStream(body) && !is.string(body) && !is.buffer(body) && !(options.form || options.json)) {\n      throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n    }\n\n    if (options.json && !(isObject || is.array(body))) {\n      throw new TypeError('The `body` option must be an Object or Array when the `json` option is used');\n    }\n\n    if (options.form && !isObject) {\n      throw new TypeError('The `body` option must be an Object when the `form` option is used');\n    }\n\n    if (isFormData(body)) {\n      // Special case for https://github.com/form-data/form-data\n      headers['content-type'] = headers['content-type'] || \"multipart/form-data; boundary=\".concat(body.getBoundary());\n    } else if (options.form) {\n      headers['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n      options.body = new URLSearchParams(body).toString();\n    } else if (options.json) {\n      headers['content-type'] = headers['content-type'] || 'application/json';\n      options.body = JSON.stringify(body);\n    }\n\n    options.method = options.method ? options.method.toUpperCase() : 'POST';\n  }\n\n  if (!is.function(options.retry.retries)) {\n    var retries = options.retry.retries;\n\n    options.retry.retries = function (iteration, error) {\n      if (iteration > retries) {\n        return 0;\n      }\n\n      if ((!error || !options.retry.errorCodes.has(error.code)) && (!options.retry.methods.has(error.method) || !options.retry.statusCodes.has(error.statusCode))) {\n        return 0;\n      }\n\n      if (Reflect.has(error, 'headers') && Reflect.has(error.headers, 'retry-after') && retryAfterStatusCodes.has(error.statusCode)) {\n        var after = Number(error.headers['retry-after']);\n\n        if (is.nan(after)) {\n          after = Date.parse(error.headers['retry-after']) - Date.now();\n        } else {\n          after *= 1000;\n        }\n\n        if (after > options.retry.maxRetryAfter) {\n          return 0;\n        }\n\n        return after;\n      }\n\n      if (error.statusCode === 413) {\n        return 0;\n      }\n\n      var noise = Math.random() * 100;\n      return Math.pow(2, iteration - 1) * 1000 + noise;\n    };\n  }\n\n  return options;\n};\n\nvar reNormalize = function reNormalize(options) {\n  return normalize(urlLib.format(options), options);\n};\n\nmodule.exports = normalize;\nmodule.exports.preNormalize = preNormalize;\nmodule.exports.reNormalize = reNormalize;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/@vitalets/google-translate-api/node_modules/got/source/normalize-arguments.js"],"names":["require","URL","URLSearchParams","urlLib","is","urlParseLax","lowercaseKeys","urlToOptions","isFormData","merge","knownHookEvents","retryAfterStatusCodes","Set","preNormalize","options","defaults","nullOrUndefined","headers","baseUrl","toString","endsWith","stream","json","hooks","object","TypeError","event","number","timeout","gotTimeout","request","retry","retries","methods","statusCodes","errorCodes","nonEmptyObject","maxRetryAfter","Math","min","connection","filter","n","array","map","method","toUpperCase","normalize","url","plainObject","string","startsWith","slice","replace","path","protocol","init","hook","called","promise","Object","defineProperty","set","Error","get","query","nonEmptyString","split","hostname","matches","exec","socketPath","host","entries","key","value","undefined","accept","decompress","body","isObject","buffer","nodeStream","form","getBoundary","JSON","stringify","function","iteration","error","has","code","statusCode","Reflect","after","Number","nan","Date","parse","now","noise","random","reNormalize","format","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst {URL, URLSearchParams} = require('url'); // TODO: Use the `URL` global when targeting Node.js 10\nconst urlLib = require('url');\nconst is = require('@sindresorhus/is');\nconst urlParseLax = require('url-parse-lax');\nconst lowercaseKeys = require('lowercase-keys');\nconst urlToOptions = require('./utils/url-to-options');\nconst isFormData = require('./utils/is-form-data');\nconst merge = require('./merge');\nconst knownHookEvents = require('./known-hook-events');\n\nconst retryAfterStatusCodes = new Set([413, 429, 503]);\n\n// `preNormalize` handles static options (e.g. headers).\n// For example, when you create a custom instance and make a request\n// with no static changes, they won't be normalized again.\n//\n// `normalize` operates on dynamic options - they cannot be saved.\n// For example, `body` is everytime different per request.\n// When it's done normalizing the new options, it performs merge()\n// on the prenormalized options and the normalized ones.\n\nconst preNormalize = (options, defaults) => {\n\tif (is.nullOrUndefined(options.headers)) {\n\t\toptions.headers = {};\n\t} else {\n\t\toptions.headers = lowercaseKeys(options.headers);\n\t}\n\n\tif (options.baseUrl && !options.baseUrl.toString().endsWith('/')) {\n\t\toptions.baseUrl += '/';\n\t}\n\n\tif (options.stream) {\n\t\toptions.json = false;\n\t}\n\n\tif (is.nullOrUndefined(options.hooks)) {\n\t\toptions.hooks = {};\n\t} else if (!is.object(options.hooks)) {\n\t\tthrow new TypeError(`Parameter \\`hooks\\` must be an object, not ${is(options.hooks)}`);\n\t}\n\n\tfor (const event of knownHookEvents) {\n\t\tif (is.nullOrUndefined(options.hooks[event])) {\n\t\t\tif (defaults) {\n\t\t\t\toptions.hooks[event] = [...defaults.hooks[event]];\n\t\t\t} else {\n\t\t\t\toptions.hooks[event] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is.number(options.timeout)) {\n\t\toptions.gotTimeout = {request: options.timeout};\n\t} else if (is.object(options.timeout)) {\n\t\toptions.gotTimeout = options.timeout;\n\t}\n\n\tdelete options.timeout;\n\n\tconst {retry} = options;\n\toptions.retry = {\n\t\tretries: 0,\n\t\tmethods: [],\n\t\tstatusCodes: [],\n\t\terrorCodes: []\n\t};\n\n\tif (is.nonEmptyObject(defaults) && retry !== false) {\n\t\toptions.retry = {...defaults.retry};\n\t}\n\n\tif (retry !== false) {\n\t\tif (is.number(retry)) {\n\t\t\toptions.retry.retries = retry;\n\t\t} else {\n\t\t\toptions.retry = {...options.retry, ...retry};\n\t\t}\n\t}\n\n\tif (options.gotTimeout) {\n\t\toptions.retry.maxRetryAfter = Math.min(...[options.gotTimeout.request, options.gotTimeout.connection].filter(n => !is.nullOrUndefined(n)));\n\t}\n\n\tif (is.array(options.retry.methods)) {\n\t\toptions.retry.methods = new Set(options.retry.methods.map(method => method.toUpperCase()));\n\t}\n\n\tif (is.array(options.retry.statusCodes)) {\n\t\toptions.retry.statusCodes = new Set(options.retry.statusCodes);\n\t}\n\n\tif (is.array(options.retry.errorCodes)) {\n\t\toptions.retry.errorCodes = new Set(options.retry.errorCodes);\n\t}\n\n\treturn options;\n};\n\nconst normalize = (url, options, defaults) => {\n\tif (is.plainObject(url)) {\n\t\toptions = {...url, ...options};\n\t\turl = options.url || {};\n\t\tdelete options.url;\n\t}\n\n\tif (defaults) {\n\t\toptions = merge({}, defaults.options, options ? preNormalize(options, defaults.options) : {});\n\t} else {\n\t\toptions = merge({}, preNormalize(options));\n\t}\n\n\tif (!is.string(url) && !is.object(url)) {\n\t\tthrow new TypeError(`Parameter \\`url\\` must be a string or object, not ${is(url)}`);\n\t}\n\n\tif (is.string(url)) {\n\t\tif (options.baseUrl) {\n\t\t\tif (url.toString().startsWith('/')) {\n\t\t\t\turl = url.toString().slice(1);\n\t\t\t}\n\n\t\t\turl = urlToOptions(new URL(url, options.baseUrl));\n\t\t} else {\n\t\t\turl = url.replace(/^unix:/, 'http://$&');\n\t\t\turl = urlParseLax(url);\n\t\t}\n\t} else if (is(url) === 'URL') {\n\t\turl = urlToOptions(url);\n\t}\n\n\t// Override both null/undefined with default protocol\n\toptions = merge({path: ''}, url, {protocol: url.protocol || 'https:'}, options);\n\n\tfor (const hook of options.hooks.init) {\n\t\tconst called = hook(options);\n\n\t\tif (is.promise(called)) {\n\t\t\tthrow new TypeError('The `init` hook must be a synchronous function');\n\t\t}\n\t}\n\n\tconst {baseUrl} = options;\n\tObject.defineProperty(options, 'baseUrl', {\n\t\tset: () => {\n\t\t\tthrow new Error('Failed to set baseUrl. Options are normalized already.');\n\t\t},\n\t\tget: () => baseUrl\n\t});\n\n\tconst {query} = options;\n\tif (is.nonEmptyString(query) || is.nonEmptyObject(query) || query instanceof URLSearchParams) {\n\t\tif (!is.string(query)) {\n\t\t\toptions.query = (new URLSearchParams(query)).toString();\n\t\t}\n\n\t\toptions.path = `${options.path.split('?')[0]}?${options.query}`;\n\t\tdelete options.query;\n\t}\n\n\tif (options.hostname === 'unix') {\n\t\tconst matches = /(.+?):(.+)/.exec(options.path);\n\n\t\tif (matches) {\n\t\t\tconst [, socketPath, path] = matches;\n\t\t\toptions = {\n\t\t\t\t...options,\n\t\t\t\tsocketPath,\n\t\t\t\tpath,\n\t\t\t\thost: null\n\t\t\t};\n\t\t}\n\t}\n\n\tconst {headers} = options;\n\tfor (const [key, value] of Object.entries(headers)) {\n\t\tif (is.nullOrUndefined(value)) {\n\t\t\tdelete headers[key];\n\t\t}\n\t}\n\n\tif (options.json && is.undefined(headers.accept)) {\n\t\theaders.accept = 'application/json';\n\t}\n\n\tif (options.decompress && is.undefined(headers['accept-encoding'])) {\n\t\theaders['accept-encoding'] = 'gzip, deflate';\n\t}\n\n\tconst {body} = options;\n\tif (is.nullOrUndefined(body)) {\n\t\toptions.method = options.method ? options.method.toUpperCase() : 'GET';\n\t} else {\n\t\tconst isObject = is.object(body) && !is.buffer(body) && !is.nodeStream(body);\n\t\tif (!is.nodeStream(body) && !is.string(body) && !is.buffer(body) && !(options.form || options.json)) {\n\t\t\tthrow new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n\t\t}\n\n\t\tif (options.json && !(isObject || is.array(body))) {\n\t\t\tthrow new TypeError('The `body` option must be an Object or Array when the `json` option is used');\n\t\t}\n\n\t\tif (options.form && !isObject) {\n\t\t\tthrow new TypeError('The `body` option must be an Object when the `form` option is used');\n\t\t}\n\n\t\tif (isFormData(body)) {\n\t\t\t// Special case for https://github.com/form-data/form-data\n\t\t\theaders['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t} else if (options.form) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n\t\t\toptions.body = (new URLSearchParams(body)).toString();\n\t\t} else if (options.json) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/json';\n\t\t\toptions.body = JSON.stringify(body);\n\t\t}\n\n\t\toptions.method = options.method ? options.method.toUpperCase() : 'POST';\n\t}\n\n\tif (!is.function(options.retry.retries)) {\n\t\tconst {retries} = options.retry;\n\n\t\toptions.retry.retries = (iteration, error) => {\n\t\t\tif (iteration > retries) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif ((!error || !options.retry.errorCodes.has(error.code)) && (!options.retry.methods.has(error.method) || !options.retry.statusCodes.has(error.statusCode))) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (Reflect.has(error, 'headers') && Reflect.has(error.headers, 'retry-after') && retryAfterStatusCodes.has(error.statusCode)) {\n\t\t\t\tlet after = Number(error.headers['retry-after']);\n\t\t\t\tif (is.nan(after)) {\n\t\t\t\t\tafter = Date.parse(error.headers['retry-after']) - Date.now();\n\t\t\t\t} else {\n\t\t\t\t\tafter *= 1000;\n\t\t\t\t}\n\n\t\t\t\tif (after > options.retry.maxRetryAfter) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn after;\n\t\t\t}\n\n\t\t\tif (error.statusCode === 413) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst noise = Math.random() * 100;\n\t\t\treturn ((2 ** (iteration - 1)) * 1000) + noise;\n\t\t};\n\t}\n\n\treturn options;\n};\n\nconst reNormalize = options => normalize(urlLib.format(options), options);\n\nmodule.exports = normalize;\nmodule.exports.preNormalize = preNormalize;\nmodule.exports.reNormalize = reNormalize;\n"]},"metadata":{},"sourceType":"script"}