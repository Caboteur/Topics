{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar EventEmitter = require('events');\n\nvar JSONB = require('json-buffer');\n\nvar loadStore = function loadStore(opts) {\n  var adapters = {\n    redis: '@keyv/redis',\n    mongodb: '@keyv/mongo',\n    mongo: '@keyv/mongo',\n    sqlite: '@keyv/sqlite',\n    postgresql: '@keyv/postgres',\n    postgres: '@keyv/postgres',\n    mysql: '@keyv/mysql'\n  };\n\n  if (opts.adapter || opts.uri) {\n    var adapter = opts.adapter || /^[^:]*/.exec(opts.uri)[0];\n    return new (require(adapters[adapter]))(opts);\n  }\n\n  return new Map();\n};\n\nvar Keyv =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(Keyv, _EventEmitter);\n\n  function Keyv(uri, opts) {\n    var _this;\n\n    _classCallCheck(this, Keyv);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyv).call(this));\n    _this.opts = Object.assign({\n      namespace: 'keyv',\n      serialize: JSONB.stringify,\n      deserialize: JSONB.parse\n    }, typeof uri === 'string' ? {\n      uri: uri\n    } : uri, opts);\n\n    if (!_this.opts.store) {\n      var adapterOpts = Object.assign({}, _this.opts);\n      _this.opts.store = loadStore(adapterOpts);\n    }\n\n    if (typeof _this.opts.store.on === 'function') {\n      _this.opts.store.on('error', function (err) {\n        return _this.emit('error', err);\n      });\n    }\n\n    _this.opts.store.namespace = _this.opts.namespace;\n    return _this;\n  }\n\n  _createClass(Keyv, [{\n    key: \"_getKeyPrefix\",\n    value: function _getKeyPrefix(key) {\n      return \"\".concat(this.opts.namespace, \":\").concat(key);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var _this2 = this;\n\n      key = this._getKeyPrefix(key);\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        return store.get(key);\n      }).then(function (data) {\n        data = typeof data === 'string' ? _this2.opts.deserialize(data) : data;\n\n        if (data === undefined) {\n          return undefined;\n        }\n\n        if (typeof data.expires === 'number' && Date.now() > data.expires) {\n          _this2.delete(key);\n\n          return undefined;\n        }\n\n        return data.value;\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value, ttl) {\n      var _this3 = this;\n\n      key = this._getKeyPrefix(key);\n\n      if (typeof ttl === 'undefined') {\n        ttl = this.opts.ttl;\n      }\n\n      if (ttl === 0) {\n        ttl = undefined;\n      }\n\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        var expires = typeof ttl === 'number' ? Date.now() + ttl : null;\n        value = {\n          value: value,\n          expires: expires\n        };\n        return store.set(key, _this3.opts.serialize(value), ttl);\n      }).then(function () {\n        return true;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      key = this._getKeyPrefix(key);\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        return store.delete(key);\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        return store.clear();\n      });\n    }\n  }]);\n\n  return Keyv;\n}(EventEmitter);\n\nmodule.exports = Keyv;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/keyv/src/index.js"],"names":["EventEmitter","require","JSONB","loadStore","opts","adapters","redis","mongodb","mongo","sqlite","postgresql","postgres","mysql","adapter","uri","exec","Map","Keyv","Object","assign","namespace","serialize","stringify","deserialize","parse","store","adapterOpts","on","err","emit","key","_getKeyPrefix","Promise","resolve","then","get","data","undefined","expires","Date","now","delete","value","ttl","set","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst JSONB = require('json-buffer');\n\nconst loadStore = opts => {\n\tconst adapters = {\n\t\tredis: '@keyv/redis',\n\t\tmongodb: '@keyv/mongo',\n\t\tmongo: '@keyv/mongo',\n\t\tsqlite: '@keyv/sqlite',\n\t\tpostgresql: '@keyv/postgres',\n\t\tpostgres: '@keyv/postgres',\n\t\tmysql: '@keyv/mysql'\n\t};\n\tif (opts.adapter || opts.uri) {\n\t\tconst adapter = opts.adapter || /^[^:]*/.exec(opts.uri)[0];\n\t\treturn new (require(adapters[adapter]))(opts);\n\t}\n\treturn new Map();\n};\n\nclass Keyv extends EventEmitter {\n\tconstructor(uri, opts) {\n\t\tsuper();\n\t\tthis.opts = Object.assign(\n\t\t\t{\n\t\t\t\tnamespace: 'keyv',\n\t\t\t\tserialize: JSONB.stringify,\n\t\t\t\tdeserialize: JSONB.parse\n\t\t\t},\n\t\t\t(typeof uri === 'string') ? { uri } : uri,\n\t\t\topts\n\t\t);\n\n\t\tif (!this.opts.store) {\n\t\t\tconst adapterOpts = Object.assign({}, this.opts);\n\t\t\tthis.opts.store = loadStore(adapterOpts);\n\t\t}\n\n\t\tif (typeof this.opts.store.on === 'function') {\n\t\t\tthis.opts.store.on('error', err => this.emit('error', err));\n\t\t}\n\n\t\tthis.opts.store.namespace = this.opts.namespace;\n\t}\n\n\t_getKeyPrefix(key) {\n\t\treturn `${this.opts.namespace}:${key}`;\n\t}\n\n\tget(key) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.get(key))\n\t\t\t.then(data => {\n\t\t\t\tdata = (typeof data === 'string') ? this.opts.deserialize(data) : data;\n\t\t\t\tif (data === undefined) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (typeof data.expires === 'number' && Date.now() > data.expires) {\n\t\t\t\t\tthis.delete(key);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn data.value;\n\t\t\t});\n\t}\n\n\tset(key, value, ttl) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tif (typeof ttl === 'undefined') {\n\t\t\tttl = this.opts.ttl;\n\t\t}\n\t\tif (ttl === 0) {\n\t\t\tttl = undefined;\n\t\t}\n\t\tconst store = this.opts.store;\n\n\t\treturn Promise.resolve()\n\t\t\t.then(() => {\n\t\t\t\tconst expires = (typeof ttl === 'number') ? (Date.now() + ttl) : null;\n\t\t\t\tvalue = { value, expires };\n\t\t\t\treturn store.set(key, this.opts.serialize(value), ttl);\n\t\t\t})\n\t\t\t.then(() => true);\n\t}\n\n\tdelete(key) {\n\t\tkey = this._getKeyPrefix(key);\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.delete(key));\n\t}\n\n\tclear() {\n\t\tconst store = this.opts.store;\n\t\treturn Promise.resolve()\n\t\t\t.then(() => store.clear());\n\t}\n}\n\nmodule.exports = Keyv;\n"]},"metadata":{},"sourceType":"script"}