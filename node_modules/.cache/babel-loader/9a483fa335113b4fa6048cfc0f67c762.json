{"ast":null,"code":"var querystring = require('querystring');\n\nvar got = require('got');\n\nvar safeEval = require('safe-eval');\n\nvar token = require('google-translate-token');\n\nvar languages = require('./languages');\n\nfunction translate(text, opts) {\n  opts = opts || {};\n  var e;\n  [opts.from, opts.to].forEach(function (lang) {\n    if (lang && !languages.isSupported(lang)) {\n      e = new Error();\n      e.code = 400;\n      e.message = 'The language \\'' + lang + '\\' is not supported';\n    }\n  });\n\n  if (e) {\n    return new Promise(function (resolve, reject) {\n      reject(e);\n    });\n  }\n\n  opts.from = opts.from || 'auto';\n  opts.to = opts.to || 'en';\n  opts.from = languages.getCode(opts.from);\n  opts.to = languages.getCode(opts.to);\n  return token.get(text).then(function (token) {\n    var url = 'https://translate.google.com/translate_a/single';\n    var data = {\n      client: 't',\n      sl: opts.from,\n      tl: opts.to,\n      hl: opts.to,\n      dt: ['at', 'bd', 'ex', 'ld', 'md', 'qca', 'rw', 'rm', 'ss', 't'],\n      ie: 'UTF-8',\n      oe: 'UTF-8',\n      otf: 1,\n      ssel: 0,\n      tsel: 0,\n      kc: 7,\n      q: text\n    };\n    data[token.name] = token.value;\n    return url + '?' + querystring.stringify(data);\n  }).then(function (url) {\n    return got(url).then(function (res) {\n      var result = {\n        text: '',\n        from: {\n          language: {\n            didYouMean: false,\n            iso: ''\n          },\n          text: {\n            autoCorrected: false,\n            value: '',\n            didYouMean: false\n          }\n        },\n        raw: ''\n      };\n\n      if (opts.raw) {\n        result.raw = res.body;\n      }\n\n      var body = safeEval(res.body);\n      body[0].forEach(function (obj) {\n        if (obj[0]) {\n          result.text += obj[0];\n        }\n      });\n\n      if (body[2] === body[8][0][0]) {\n        result.from.language.iso = body[2];\n      } else {\n        result.from.language.didYouMean = true;\n        result.from.language.iso = body[8][0][0];\n      }\n\n      if (body[7] && body[7][0]) {\n        var str = body[7][0];\n        str = str.replace(/<b><i>/g, '[');\n        str = str.replace(/<\\/i><\\/b>/g, ']');\n        result.from.text.value = str;\n\n        if (body[7][5] === true) {\n          result.from.text.autoCorrected = true;\n        } else {\n          result.from.text.didYouMean = true;\n        }\n      }\n\n      return result;\n    }).catch(function (err) {\n      var e;\n      e = new Error();\n\n      if (err.statusCode !== undefined && err.statusCode !== 200) {\n        e.code = 'BAD_REQUEST';\n      } else {\n        e.code = 'BAD_NETWORK';\n      }\n\n      throw e;\n    });\n  });\n}\n\nmodule.exports = translate;\nmodule.exports.languages = languages;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/google-translate-api/index.js"],"names":["querystring","require","got","safeEval","token","languages","translate","text","opts","e","from","to","forEach","lang","isSupported","Error","code","message","Promise","resolve","reject","getCode","get","then","url","data","client","sl","tl","hl","dt","ie","oe","otf","ssel","tsel","kc","q","name","value","stringify","res","result","language","didYouMean","iso","autoCorrected","raw","body","obj","str","replace","catch","err","statusCode","undefined","module","exports"],"mappings":"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","sourcesContent":["var querystring = require('querystring');\n\nvar got = require('got');\nvar safeEval = require('safe-eval');\nvar token = require('google-translate-token');\n\nvar languages = require('./languages');\n\nfunction translate(text, opts) {\n    opts = opts || {};\n\n    var e;\n    [opts.from, opts.to].forEach(function (lang) {\n        if (lang && !languages.isSupported(lang)) {\n            e = new Error();\n            e.code = 400;\n            e.message = 'The language \\'' + lang + '\\' is not supported';\n        }\n    });\n    if (e) {\n        return new Promise(function (resolve, reject) {\n            reject(e);\n        });\n    }\n\n    opts.from = opts.from || 'auto';\n    opts.to = opts.to || 'en';\n\n    opts.from = languages.getCode(opts.from);\n    opts.to = languages.getCode(opts.to);\n\n    return token.get(text).then(function (token) {\n        var url = 'https://translate.google.com/translate_a/single';\n        var data = {\n            client: 't',\n            sl: opts.from,\n            tl: opts.to,\n            hl: opts.to,\n            dt: ['at', 'bd', 'ex', 'ld', 'md', 'qca', 'rw', 'rm', 'ss', 't'],\n            ie: 'UTF-8',\n            oe: 'UTF-8',\n            otf: 1,\n            ssel: 0,\n            tsel: 0,\n            kc: 7,\n            q: text\n        };\n        data[token.name] = token.value;\n\n        return url + '?' + querystring.stringify(data);\n    }).then(function (url) {\n        return got(url).then(function (res) {\n            var result = {\n                text: '',\n                from: {\n                    language: {\n                        didYouMean: false,\n                        iso: ''\n                    },\n                    text: {\n                        autoCorrected: false,\n                        value: '',\n                        didYouMean: false\n                    }\n                },\n                raw: ''\n            };\n\n            if (opts.raw) {\n                result.raw = res.body;\n            }\n\n            var body = safeEval(res.body);\n            body[0].forEach(function (obj) {\n                if (obj[0]) {\n                    result.text += obj[0];\n                }\n            });\n\n            if (body[2] === body[8][0][0]) {\n                result.from.language.iso = body[2];\n            } else {\n                result.from.language.didYouMean = true;\n                result.from.language.iso = body[8][0][0];\n            }\n\n            if (body[7] && body[7][0]) {\n                var str = body[7][0];\n\n                str = str.replace(/<b><i>/g, '[');\n                str = str.replace(/<\\/i><\\/b>/g, ']');\n\n                result.from.text.value = str;\n\n                if (body[7][5] === true) {\n                    result.from.text.autoCorrected = true;\n                } else {\n                    result.from.text.didYouMean = true;\n                }\n            }\n\n            return result;\n        }).catch(function (err) {\n            var e;\n            e = new Error();\n            if (err.statusCode !== undefined && err.statusCode !== 200) {\n                e.code = 'BAD_REQUEST';\n            } else {\n                e.code = 'BAD_NETWORK';\n            }\n            throw e;\n        });\n    });\n}\n\nmodule.exports = translate;\nmodule.exports.languages = languages;\n"]},"metadata":{},"sourceType":"script"}