{"ast":null,"code":"import wiki from 'wikijs';\n\nvar wikiped = function wikiped(data) {\n  function doGet(e) {\n    var sourceText = '';\n\n    if (e.parameter.q) {\n      sourceText = e.parameter.q;\n    }\n\n    var sourceLang = 'auto';\n\n    if (e.parameter.source) {\n      sourceLang = e.parameter.source;\n    }\n\n    var targetLang = 'ja';\n\n    if (e.parameter.target) {\n      targetLang = e.parameter.target;\n    }\n    /* Option 1 */\n\n\n    var translatedText = LanguageApp.translate(sourceText, sourceLang, targetLang);\n    /* Option 2 */\n\n    var url = \"https://translate.googleapis.com/translate_a/single?client=gtx&sl=\" + sourceLang + \"&tl=\" + targetLang + \"&dt=t&q=\" + encodeURI(sourceText);\n    var result = JSON.parse(UrlFetchApp.fetch(url).getContentText());\n    translatedText = result[0][0][0];\n    var json = {\n      'sourceText': sourceText,\n      'translatedText': translatedText\n    }; // set JSONP callback\n\n    var callback = 'callback';\n\n    if (e.parameter.callback) {\n      callback = e.parameter.callback;\n    } // return JSONP\n\n\n    return ContentService.createTextOutput(callback + '(' + JSON.stringify(json) + ')').setMimeType(ContentService.MimeType.JAVASCRIPT);\n  }\n};\n\nexport default wikiped;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/src/components/Api/wikiped.js"],"names":["wiki","wikiped","data","doGet","e","sourceText","parameter","q","sourceLang","source","targetLang","target","translatedText","LanguageApp","translate","url","encodeURI","result","JSON","parse","UrlFetchApp","fetch","getContentText","json","callback","ContentService","createTextOutput","stringify","setMimeType","MimeType","JAVASCRIPT"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAGC,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAQ;AAEtB,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAEnB,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAID,CAAC,CAACE,SAAF,CAAYC,CAAhB,EAAkB;AAChBF,MAAAA,UAAU,GAAGD,CAAC,CAACE,SAAF,CAAYC,CAAzB;AACD;;AAED,QAAIC,UAAU,GAAG,MAAjB;;AACA,QAAIJ,CAAC,CAACE,SAAF,CAAYG,MAAhB,EAAuB;AACrBD,MAAAA,UAAU,GAAGJ,CAAC,CAACE,SAAF,CAAYG,MAAzB;AACD;;AAED,QAAIC,UAAU,GAAG,IAAjB;;AACA,QAAIN,CAAC,CAACE,SAAF,CAAYK,MAAhB,EAAuB;AACrBD,MAAAA,UAAU,GAAGN,CAAC,CAACE,SAAF,CAAYK,MAAzB;AACD;AAED;;;AAEA,QAAIC,cAAc,GAAGC,WAAW,CAACC,SAAZ,CAAsBT,UAAtB,EAAkCG,UAAlC,EAA8CE,UAA9C,CAArB;AAEA;;AAEA,QAAIK,GAAG,GAAG,uEACEP,UADF,GACe,MADf,GACwBE,UADxB,GACqC,UADrC,GACkDM,SAAS,CAACX,UAAD,CADrE;AAGA,QAAIY,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,WAAW,CAACC,KAAZ,CAAkBN,GAAlB,EAAuBO,cAAvB,EAAX,CAAb;AAEAV,IAAAA,cAAc,GAAGK,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,EAAa,CAAb,CAAjB;AAEA,QAAIM,IAAI,GAAG;AACT,oBAAelB,UADN;AAET,wBAAmBO;AAFV,KAAX,CA9BmB,CAmCnB;;AACA,QAAIY,QAAQ,GAAG,UAAf;;AACA,QAAGpB,CAAC,CAACE,SAAF,CAAYkB,QAAf,EAAwB;AACtBA,MAAAA,QAAQ,GAAGpB,CAAC,CAACE,SAAF,CAAYkB,QAAvB;AACD,KAvCkB,CAyCnB;;;AACA,WAAOC,cAAc,CACXC,gBADH,CACoBF,QAAQ,GAAG,GAAX,GAAiBN,IAAI,CAACS,SAAL,CAAeJ,IAAf,CAAjB,GAAwC,GAD5D,EAEGK,WAFH,CAEeH,cAAc,CAACI,QAAf,CAAwBC,UAFvC,CAAP;AAGD;AACA,CAhDA;;AAkDD,eAAe7B,OAAf","sourcesContent":["import wiki from 'wikijs'\r\n\r\n\r\n const wikiped = (data)=>{\r\n\r\n   function doGet(e) {\r\n\r\n  var sourceText = ''\r\n  if (e.parameter.q){\r\n    sourceText = e.parameter.q;\r\n  }\r\n\r\n  var sourceLang = 'auto';\r\n  if (e.parameter.source){\r\n    sourceLang = e.parameter.source;\r\n  }\r\n\r\n  var targetLang = 'ja';\r\n  if (e.parameter.target){\r\n    targetLang = e.parameter.target;\r\n  }\r\n\r\n  /* Option 1 */\r\n\r\n  var translatedText = LanguageApp.translate(sourceText, sourceLang, targetLang)\r\n\r\n  /* Option 2 */\r\n\r\n  var url = \"https://translate.googleapis.com/translate_a/single?client=gtx&sl=\"\r\n            + sourceLang + \"&tl=\" + targetLang + \"&dt=t&q=\" + encodeURI(sourceText);\r\n\r\n  var result = JSON.parse(UrlFetchApp.fetch(url).getContentText());\r\n\r\n  translatedText = result[0][0][0];\r\n\r\n  var json = {\r\n    'sourceText' : sourceText,\r\n    'translatedText' : translatedText\r\n  };\r\n\r\n  // set JSONP callback\r\n  var callback = 'callback';\r\n  if(e.parameter.callback){\r\n    callback = e.parameter.callback\r\n  }\r\n\r\n  // return JSONP\r\n  return ContentService\r\n           .createTextOutput(callback + '(' + JSON.stringify(json) + ')')\r\n           .setMimeType(ContentService.MimeType.JAVASCRIPT);\r\n}\r\n}\r\n\r\nexport default wikiped\r\n"]},"metadata":{},"sourceType":"module"}