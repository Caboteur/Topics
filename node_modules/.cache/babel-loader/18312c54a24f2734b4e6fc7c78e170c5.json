{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"D:\\\\MegaSync\\\\proxy-server\\\\testing\\\\react-express-starter\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar pump = require('pump');\n\nvar bufferStream = require('./buffer-stream');\n\nvar MaxBufferError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(MaxBufferError, _Error);\n\n  function MaxBufferError() {\n    var _this;\n\n    _classCallCheck(this, MaxBufferError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MaxBufferError).call(this, 'maxBuffer exceeded'));\n    _this.name = 'MaxBufferError';\n    return _this;\n  }\n\n  return MaxBufferError;\n}(_wrapNativeSuper(Error));\n\nfunction getStream(_x, _x2) {\n  return _getStream.apply(this, arguments);\n}\n\nfunction _getStream() {\n  _getStream = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(inputStream, options) {\n    var _options, maxBuffer, stream;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (inputStream) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new Error('Expected a stream')));\n\n          case 2:\n            options = _objectSpread({\n              maxBuffer: Infinity\n            }, options);\n            _options = options, maxBuffer = _options.maxBuffer;\n            _context.next = 6;\n            return new Promise(function (resolve, reject) {\n              var rejectPromise = function rejectPromise(error) {\n                if (error) {\n                  // A null check\n                  error.bufferedData = stream.getBufferedValue();\n                }\n\n                reject(error);\n              };\n\n              stream = pump(inputStream, bufferStream(options), function (error) {\n                if (error) {\n                  rejectPromise(error);\n                  return;\n                }\n\n                resolve();\n              });\n              stream.on('data', function () {\n                if (stream.getBufferedLength() > maxBuffer) {\n                  rejectPromise(new MaxBufferError());\n                }\n              });\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", stream.getBufferedValue());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStream.apply(this, arguments);\n}\n\nmodule.exports = getStream; // TODO: Remove this for the next major release\n\nmodule.exports.default = getStream;\n\nmodule.exports.buffer = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    encoding: 'buffer'\n  }));\n};\n\nmodule.exports.array = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    array: true\n  }));\n};\n\nmodule.exports.MaxBufferError = MaxBufferError;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/node_modules/cacheable-request/node_modules/get-stream/index.js"],"names":["pump","require","bufferStream","MaxBufferError","name","Error","getStream","inputStream","options","Promise","reject","maxBuffer","Infinity","resolve","rejectPromise","error","bufferedData","stream","getBufferedValue","on","getBufferedLength","module","exports","default","buffer","encoding","array"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA5B;;IAEME,c;;;;;AACL,4BAAc;AAAA;;AAAA;;AACb,wFAAM,oBAAN;AACA,UAAKC,IAAL,GAAY,gBAAZ;AAFa;AAGb;;;mBAJ2BC,K;;SAOdC,S;;;;;;;2BAAf,iBAAyBC,WAAzB,EAAsCC,OAAtC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMD,WADN;AAAA;AAAA;AAAA;;AAAA,6CAESE,OAAO,CAACC,MAAR,CAAe,IAAIL,KAAJ,CAAU,mBAAV,CAAf,CAFT;;AAAA;AAKCG,YAAAA,OAAO;AACNG,cAAAA,SAAS,EAAEC;AADL,eAEHJ,OAFG,CAAP;AALD,uBAUqBA,OAVrB,EAUQG,SAVR,YAUQA,SAVR;AAAA;AAAA,mBAaO,IAAIF,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtC,kBAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,oBAAIA,KAAJ,EAAW;AAAE;AACZA,kBAAAA,KAAK,CAACC,YAAN,GAAqBC,MAAM,CAACC,gBAAP,EAArB;AACA;;AAEDR,gBAAAA,MAAM,CAACK,KAAD,CAAN;AACA,eAND;;AAQAE,cAAAA,MAAM,GAAGjB,IAAI,CAACO,WAAD,EAAcL,YAAY,CAACM,OAAD,CAA1B,EAAqC,UAAAO,KAAK,EAAI;AAC1D,oBAAIA,KAAJ,EAAW;AACVD,kBAAAA,aAAa,CAACC,KAAD,CAAb;AACA;AACA;;AAEDF,gBAAAA,OAAO;AACP,eAPY,CAAb;AASAI,cAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,YAAM;AACvB,oBAAIF,MAAM,CAACG,iBAAP,KAA6BT,SAAjC,EAA4C;AAC3CG,kBAAAA,aAAa,CAAC,IAAIX,cAAJ,EAAD,CAAb;AACA;AACD,eAJD;AAKA,aAvBK,CAbP;;AAAA;AAAA,6CAsCQc,MAAM,CAACC,gBAAP,EAtCR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyCAG,MAAM,CAACC,OAAP,GAAiBhB,SAAjB,C,CACA;;AACAe,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBjB,SAAzB;;AACAe,MAAM,CAACC,OAAP,CAAeE,MAAf,GAAwB,UAACP,MAAD,EAAST,OAAT;AAAA,SAAqBF,SAAS,CAACW,MAAD,oBAAaT,OAAb;AAAsBiB,IAAAA,QAAQ,EAAE;AAAhC,KAA9B;AAAA,CAAxB;;AACAJ,MAAM,CAACC,OAAP,CAAeI,KAAf,GAAuB,UAACT,MAAD,EAAST,OAAT;AAAA,SAAqBF,SAAS,CAACW,MAAD,oBAAaT,OAAb;AAAsBkB,IAAAA,KAAK,EAAE;AAA7B,KAA9B;AAAA,CAAvB;;AACAL,MAAM,CAACC,OAAP,CAAenB,cAAf,GAAgCA,cAAhC","sourcesContent":["'use strict';\nconst pump = require('pump');\nconst bufferStream = require('./buffer-stream');\n\nclass MaxBufferError extends Error {\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t\tthis.name = 'MaxBufferError';\n\t}\n}\n\nasync function getStream(inputStream, options) {\n\tif (!inputStream) {\n\t\treturn Promise.reject(new Error('Expected a stream'));\n\t}\n\n\toptions = {\n\t\tmaxBuffer: Infinity,\n\t\t...options\n\t};\n\n\tconst {maxBuffer} = options;\n\n\tlet stream;\n\tawait new Promise((resolve, reject) => {\n\t\tconst rejectPromise = error => {\n\t\t\tif (error) { // A null check\n\t\t\t\terror.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(error);\n\t\t};\n\n\t\tstream = pump(inputStream, bufferStream(options), error => {\n\t\t\tif (error) {\n\t\t\t\trejectPromise(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\trejectPromise(new MaxBufferError());\n\t\t\t}\n\t\t});\n\t});\n\n\treturn stream.getBufferedValue();\n}\n\nmodule.exports = getStream;\n// TODO: Remove this for the next major release\nmodule.exports.default = getStream;\nmodule.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});\nmodule.exports.array = (stream, options) => getStream(stream, {...options, array: true});\nmodule.exports.MaxBufferError = MaxBufferError;\n"]},"metadata":{},"sourceType":"script"}