{"ast":null,"code":"var _this = this;\n\nvar wikiped = function wikiped(data) {\n  useWikiSearchEngine = function useWikiSearchEngine(e) {\n    e.preventDefault();\n\n    _this.setState({\n      wikiSearchReturnValues: []\n    });\n\n    var pointerToThis = _this;\n    var url = \"https://fr.wikipedia.org/w/api.php\";\n    var params = {\n      action: 'query',\n      list: 'search',\n      srsearch: _this.state.WikiSearchTerms,\n      format: 'json'\n    };\n    url = url + '?origin=*';\n    Object.keys(params).forEach(function (key) {\n      url += \"&\" + key + \"=\" + params[key];\n    });\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      for (var key in response.query.search) {\n        pointerToThis.state.wikiSearchReturnValues.push({\n          queryResultPageFullURL: 'no link',\n          queryResultPageID: response.query.search[key].pageid,\n          queryResultPageTitle: response.query.search[key].title,\n          queryResultPageSnippet: response.query.search[key].snippet\n        });\n      }\n    }).then(function (response) {\n      var _loop = function _loop() {\n        // console.log(pointerToThis.state.wikiSearchReturnValues);\n        var page = pointerToThis.state.wikiSearchReturnValues[key2];\n        var pageID = page.queryResultPageID;\n        var urlForRetrievingPageURLByPageID = \"https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=\".concat(pageID, \"&inprop=url&format=json\");\n        fetch(urlForRetrievingPageURLByPageID).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\n          pointerToThis.forceUpdate();\n        });\n      };\n\n      for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\n        _loop();\n      }\n    });\n  };\n\n  changeWikiSearchTerms = function changeWikiSearchTerms(e) {\n    _this.setState({\n      WikiSearchTerms: e.target.value\n    });\n  };\n};\n\nexport default wikiped;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/src/components/Api/wikiped.js"],"names":["wikiped","data","useWikiSearchEngine","e","preventDefault","setState","wikiSearchReturnValues","pointerToThis","url","params","action","list","srsearch","state","WikiSearchTerms","format","Object","keys","forEach","key","fetch","then","response","json","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","title","queryResultPageSnippet","snippet","page","key2","pageID","urlForRetrievingPageURLByPageID","pages","fullurl","forceUpdate","changeWikiSearchTerms","target","value"],"mappings":";;AAIC,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAQ;AACtBC,EAAAA,mBAAmB,GAAG,6BAACC,CAAD,EAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,IAAA,KAAI,CAACC,QAAL,CAAc;AACZC,MAAAA,sBAAsB,EAAE;AADZ,KAAd;;AAIA,QAAMC,aAAa,GAAG,KAAtB;AAEA,QAAIC,GAAG,GAAG,oCAAV;AAEA,QAAIC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,OADG;AAEXC,MAAAA,IAAI,EAAE,QAFK;AAGXC,MAAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWC,eAHV;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAAb;AAOAP,IAAAA,GAAG,GAAGA,GAAG,GAAG,WAAZ;AACAQ,IAAAA,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnCX,MAAAA,GAAG,IAAI,MAAMW,GAAN,GAAY,GAAZ,GAAkBV,MAAM,CAACU,GAAD,CAA/B;AACD,KAFD;AAIAC,IAAAA,KAAK,CAACZ,GAAD,CAAL,CACGa,IADH,CAEI,UAAUC,QAAV,EAAoB;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJL,EAMGF,IANH,CAOI,UAAUC,QAAV,EAAoB;AAGlB,WAAK,IAAIH,GAAT,IAAgBG,QAAQ,CAACE,KAAT,CAAeC,MAA/B,EAAuC;AACrClB,QAAAA,aAAa,CAACM,KAAd,CAAoBP,sBAApB,CAA2CoB,IAA3C,CAAgD;AAC9CC,UAAAA,sBAAsB,EAAE,SADsB;AAE9CC,UAAAA,iBAAiB,EAAEN,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BU,MAFA;AAG9CC,UAAAA,oBAAoB,EAAER,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BY,KAHH;AAI9CC,UAAAA,sBAAsB,EAAEV,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2Bc;AAJL,SAAhD;AAMD;AACF,KAlBL,EAoBGZ,IApBH,CAqBI,UAAUC,QAAV,EAAoB;AAAA;AAEhB;AACA,YAAIY,IAAI,GAAG3B,aAAa,CAACM,KAAd,CAAoBP,sBAApB,CAA2C6B,IAA3C,CAAX;AACA,YAAIC,MAAM,GAAGF,IAAI,CAACN,iBAAlB;AACA,YAAIS,+BAA+B,wFAAiFD,MAAjF,4BAAnC;AAEAhB,QAAAA,KAAK,CAACiB,+BAAD,CAAL,CACGhB,IADH,CAEI,UAAUC,QAAV,EAAoB;AAClB,iBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,SAJL,EAMGF,IANH,CAOI,UAAUC,QAAV,EAAoB;AAClBY,UAAAA,IAAI,CAACP,sBAAL,GAA8BL,QAAQ,CAACE,KAAT,CAAec,KAAf,CAAqBF,MAArB,EAA6BG,OAA3D;AAEAhC,UAAAA,aAAa,CAACiC,WAAd;AACD,SAXL;AAPgB;;AAClB,WAAK,IAAIL,IAAT,IAAiB5B,aAAa,CAACM,KAAd,CAAoBP,sBAArC,EAA6D;AAAA;AAmB5D;AACF,KA1CL;AA4CD,GAnED;;AAqEAmC,EAAAA,qBAAqB,GAAG,+BAACtC,CAAD,EAAO;AAC7B,IAAA,KAAI,CAACE,QAAL,CAAc;AACZS,MAAAA,eAAe,EAAEX,CAAC,CAACuC,MAAF,CAASC;AADd,KAAd;AAGD,GAJD;AAKF,CA3EA;;AA6ED,eAAe3C,OAAf","sourcesContent":["\r\n\r\n\r\n\r\n const wikiped = (data)=>{\r\n   useWikiSearchEngine = (e) => {\r\n     e.preventDefault();\r\n\r\n     this.setState({\r\n       wikiSearchReturnValues: []\r\n     });\r\n\r\n     const pointerToThis = this;\r\n\r\n     var url = \"https://fr.wikipedia.org/w/api.php\";\r\n\r\n     var params = {\r\n       action: 'query',\r\n       list: 'search',\r\n       srsearch: this.state.WikiSearchTerms,\r\n       format: 'json'\r\n     };\r\n\r\n     url = url + '?origin=*';\r\n     Object.keys(params).forEach((key) => {\r\n       url += \"&\" + key + \"=\" + params[key];\r\n     });\r\n\r\n     fetch(url)\r\n       .then(\r\n         function (response) {\r\n           return response.json();\r\n         }\r\n       )\r\n       .then(\r\n         function (response) {\r\n\r\n\r\n           for (var key in response.query.search) {\r\n             pointerToThis.state.wikiSearchReturnValues.push({\r\n               queryResultPageFullURL: 'no link',\r\n               queryResultPageID: response.query.search[key].pageid,\r\n               queryResultPageTitle: response.query.search[key].title,\r\n               queryResultPageSnippet: response.query.search[key].snippet\r\n             });\r\n           }\r\n         }\r\n       )\r\n       .then(\r\n         function (response) {\r\n           for (var key2 in pointerToThis.state.wikiSearchReturnValues) {\r\n             // console.log(pointerToThis.state.wikiSearchReturnValues);\r\n             let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n             let pageID = page.queryResultPageID;\r\n             let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n             fetch(urlForRetrievingPageURLByPageID)\r\n               .then(\r\n                 function (response) {\r\n                   return response.json();\r\n                 }\r\n               )\r\n               .then(\r\n                 function (response) {\r\n                   page.queryResultPageFullURL = response.query.pages[pageID].fullurl;\r\n\r\n                   pointerToThis.forceUpdate();\r\n                 }\r\n               )\r\n           }\r\n         }\r\n       )\r\n   }\r\n\r\n   changeWikiSearchTerms = (e) => {\r\n     this.setState({\r\n       WikiSearchTerms: e.target.value\r\n     });\r\n   }\r\n}\r\n\r\nexport default wikiped\r\n"]},"metadata":{},"sourceType":"module"}