{"ast":null,"code":"import wiki from 'wikijs';\n\nvar wikiped = function wikiped(data) {\n  var wikiSearchReturnValues = [];\n  var fullurl = \"sdfsdf\";\n  var title = \"hqskjdh\";\n  var url = \"https://fr.wikipedia.org/w/api.php\";\n  var params = {\n    action: 'query',\n    list: 'search',\n    srsearch: data,\n    format: 'json'\n  };\n  url = url + '?origin=*';\n  Object.keys(params).forEach(function (key) {\n    url += \"&\" + key + \"=\" + params[key];\n  });\n  return fetch(url).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    for (var key in response.query.search) {\n      wikiSearchReturnValues.push({\n        queryResultPageFullURL: 'no link',\n        queryResultPageID: response.query.search[key].pageid,\n        queryResultPageTitle: response.query.search[key].title,\n        queryResultPageSnippet: response.query.search[key].snippet\n      });\n    }\n  }).then(function (response) {\n    if (wikiSearchReturnValues[0] != undefined) {\n      var page = wikiSearchReturnValues[0];\n      var pageID = page.queryResultPageID;\n      var urlForRetrievingPageURLByPageID = \"https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=\".concat(pageID, \"&inprop=url&format=json\");\n      title = wikiSearchReturnValues[0].queryResultPageTitle;\n    } else {\n      console.log(\"nop)\");\n    }\n  }).then(function () {});\n};\n\nexport default wikiped;","map":{"version":3,"sources":["D:/MegaSync/proxy-server/testing/react-express-starter/src/components/Api/wikiped.js"],"names":["wiki","wikiped","data","wikiSearchReturnValues","fullurl","title","url","params","action","list","srsearch","format","Object","keys","forEach","key","fetch","then","response","json","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","queryResultPageSnippet","snippet","undefined","page","pageID","urlForRetrievingPageURLByPageID","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAIC,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAQ;AAEtB,MAAMC,sBAAsB,GAAG,EAA/B;AACA,MAAIC,OAAO,GAAG,QAAd;AACA,MAAIC,KAAK,GAAG,SAAZ;AAGE,MAAIC,GAAG,GAAG,oCAAV;AAEA,MAAIC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,OADG;AAEXC,IAAAA,IAAI,EAAE,QAFK;AAGXC,IAAAA,QAAQ,EAAER,IAHC;AAIXS,IAAAA,MAAM,EAAE;AAJG,GAAb;AAOAL,EAAAA,GAAG,GAAGA,GAAG,GAAG,WAAZ;AACAM,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnCT,IAAAA,GAAG,IAAI,MAAMS,GAAN,GAAY,GAAZ,GAAkBR,MAAM,CAACQ,GAAD,CAA/B;AACD,GAFD;AAIA,SAAOC,KAAK,CAACV,GAAD,CAAL,CACJW,IADI,CAEH,UAAUC,QAAV,EAAoB;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAJE,EAMJF,IANI,CAOH,UAAUC,QAAV,EAAoB;AAGlB,SAAK,IAAIH,GAAT,IAAgBG,QAAQ,CAACE,KAAT,CAAeC,MAA/B,EAAuC;AACtClB,MAAAA,sBAAsB,CAACmB,IAAvB,CAA4B;AACzBC,QAAAA,sBAAsB,EAAE,SADC;AAEzBC,QAAAA,iBAAiB,EAAEN,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BU,MAFrB;AAGzBC,QAAAA,oBAAoB,EAAER,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2BV,KAHxB;AAIzBsB,QAAAA,sBAAsB,EAAET,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBN,GAAtB,EAA2Ba;AAJ1B,OAA5B;AAMA;AAEF,GAnBE,EAuBJX,IAvBI,CAwBH,UAAUC,QAAV,EAAoB;AAEjB,QAAIf,sBAAsB,CAAC,CAAD,CAAtB,IAA6B0B,SAAjC,EAA2C;AAC1C,UAAIC,IAAI,GAAG3B,sBAAsB,CAAC,CAAD,CAAjC;AACA,UAAI4B,MAAM,GAAGD,IAAI,CAACN,iBAAlB;AACA,UAAIQ,+BAA+B,wFAAiFD,MAAjF,4BAAnC;AACA1B,MAAAA,KAAK,GAAGF,sBAAsB,CAAC,CAAD,CAAtB,CAA0BuB,oBAAlC;AAED,KANA,MAMK;AACJO,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GAnCE,EAqCJjB,IArCI,CAsCH,YAAU,CAET,CAxCE,CAAP;AA4CD,CAjEH;;AAoED,eAAehB,OAAf","sourcesContent":["import wiki from 'wikijs'\r\n\r\n\r\n\r\n const wikiped = (data)=>{\r\n\r\n   const wikiSearchReturnValues = []\r\n   let fullurl = \"sdfsdf\";\r\n   let title = \"hqskjdh\";\r\n\r\n\r\n     var url = \"https://fr.wikipedia.org/w/api.php\";\r\n\r\n     var params = {\r\n       action: 'query',\r\n       list: 'search',\r\n       srsearch: data,\r\n       format: 'json'\r\n     };\r\n\r\n     url = url + '?origin=*';\r\n     Object.keys(params).forEach((key) => {\r\n       url += \"&\" + key + \"=\" + params[key];\r\n     });\r\n\r\n     return fetch(url)\r\n       .then(\r\n         function (response) {\r\n           return response.json();\r\n         }\r\n       )\r\n       .then(\r\n         function (response) {\r\n\r\n\r\n           for (var key in response.query.search) {\r\n            wikiSearchReturnValues.push({\r\n               queryResultPageFullURL: 'no link',\r\n               queryResultPageID: response.query.search[key].pageid,\r\n               queryResultPageTitle: response.query.search[key].title,\r\n               queryResultPageSnippet: response.query.search[key].snippet\r\n             });\r\n           }\r\n\r\n         }\r\n\r\n       )\r\n\r\n       .then(\r\n         function (response) {\r\n\r\n            if (wikiSearchReturnValues[0] != undefined){\r\n             let page = wikiSearchReturnValues[0];\r\n             let pageID = page.queryResultPageID;\r\n             let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n             title = wikiSearchReturnValues[0].queryResultPageTitle;\r\n\r\n           }else {\r\n             console.log(\"nop)\")\r\n           }\r\n         }\r\n       )\r\n       .then(\r\n         function(){\r\n\r\n         }\r\n       )\r\n\r\n\r\n   }\r\n\r\n\r\nexport default wikiped\r\n"]},"metadata":{},"sourceType":"module"}